<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <namespace name="Oren"
             version="1.0"
             shared-library="./oren.dll"
             c:identifier-prefixes="Oren"
             c:symbol-prefixes="oren">
    <class name="CMClient"
           c:symbol-prefix="cmclient"
           c:type="OrenCMClient"
           parent="NCPacketHandler"
           glib:type-name="OrenCMClient"
           glib:get-type="oren_cmclient_get_type"
           glib:type-struct="CMClientClass">
      <constructor name="new" c:identifier="oren_cmclient_new">
        <return-value transfer-ownership="full">
          <type name="CMClient" c:type="OrenCMClient*"/>
        </return-value>
      </constructor>
      <virtual-method name="fail">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="CMRequestResult" c:type="OrenCMRequestResult"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="groups" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="groups" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="slaves" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="slaves" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="time">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="tv" transfer-ownership="none">
            <type name="gpointer" c:type="const timeval*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="close" c:identifier="oren_cmclient_close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_svraddr" c:identifier="oren_cmclient_get_svraddr">
        <doc xml:whitespace="preserve">Get the server address used by the client.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenNCSockaddr.</doc>
          <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
        </return-value>
      </method>
      <method name="open" c:identifier="oren_cmclient_open">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="reactor" transfer-ownership="none">
            <type name="NCReactor" c:type="OrenNCReactor*"/>
          </parameter>
          <parameter name="socket" transfer-ownership="none">
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
          <parameter name="signature" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="request_groups"
              c:identifier="oren_cmclient_request_groups">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="request_slaves"
              c:identifier="oren_cmclient_request_slaves">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="group" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="request_time" c:identifier="oren_cmclient_request_time">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_svraddr" c:identifier="oren_cmclient_set_svraddr">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="addr" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NCPacketHandler" c:type="OrenNCPacketHandler"/>
      </field>
      <field name="priv">
        <type name="CMClientPrivate" c:type="OrenCMClientPrivate*"/>
      </field>
      <glib:signal name="fail" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="CMRequestResult"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="groups" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="groups" transfer-ownership="none">
            <doc xml:whitespace="preserve">list of groups</doc>
            <type name="GLib.SList">
              <type name="utf8"/>
            </type>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="slaves" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="groups" transfer-ownership="none">
            <doc xml:whitespace="preserve">list of slaves</doc>
            <type name="GLib.SList">
              <type name="CMSlaveInfo"/>
            </type>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="time" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Timeval"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CMClientClass"
            c:type="OrenCMClientClass"
            glib:is-gtype-struct-for="CMClient">
      <field name="parent_class">
        <type name="NCPacketHandlerClass" c:type="OrenNCPacketHandlerClass"/>
      </field>
      <field name="time">
        <callback name="time">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="CMClient" c:type="OrenCMClient*"/>
            </parameter>
            <parameter name="tv" transfer-ownership="none">
              <type name="gpointer" c:type="const timeval*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="groups" introspectable="0">
        <callback name="groups" introspectable="0">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="CMClient" c:type="OrenCMClient*"/>
            </parameter>
            <parameter name="groups" transfer-ownership="none">
              <type name="GLib.SList" c:type="GSList*">
                <type name="gpointer" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="slaves" introspectable="0">
        <callback name="slaves" introspectable="0">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="CMClient" c:type="OrenCMClient*"/>
            </parameter>
            <parameter name="slaves" transfer-ownership="none">
              <type name="GLib.SList" c:type="GSList*">
                <type name="gpointer" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="fail">
        <callback name="fail">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="CMClient" c:type="OrenCMClient*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="CMRequestResult" c:type="OrenCMRequestResult"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="CMClientPrivate" c:type="OrenCMClientPrivate" disguised="1">
    </record>
    <constant name="CMGROUP_ALL" value="all" c:type="OREN_CMGROUP_ALL">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <enumeration name="CMLoginResult"
                 glib:type-name="OrenCMLoginResult"
                 glib:get-type="oren_cmlogin_result_get_type"
                 c:type="OrenCMLoginResult">
      <member name="unknown"
              value="0"
              c:identifier="OREN_CMLOGIN_RESULT_UNKNOWN"
              glib:nick="unknown"/>
      <member name="success"
              value="1"
              c:identifier="OREN_CMLOGIN_RESULT_SUCCESS"
              glib:nick="success"/>
      <member name="timeout"
              value="2"
              c:identifier="OREN_CMLOGIN_RESULT_TIMEOUT"
              glib:nick="timeout"/>
      <member name="errver"
              value="3"
              c:identifier="OREN_CMLOGIN_RESULT_ERRVER"
              glib:nick="errver"/>
      <member name="errsig"
              value="4"
              c:identifier="OREN_CMLOGIN_RESULT_ERRSIG"
              glib:nick="errsig"/>
      <member name="errname"
              value="5"
              c:identifier="OREN_CMLOGIN_RESULT_ERRNAME"
              glib:nick="errname"/>
      <member name="errgroup"
              value="6"
              c:identifier="OREN_CMLOGIN_RESULT_ERRGROUP"
              glib:nick="errgroup"/>
      <member name="errsvc"
              value="7"
              c:identifier="OREN_CMLOGIN_RESULT_ERRSVC"
              glib:nick="errsvc"/>
    </enumeration>
    <enumeration name="CMLogoutReason"
                 glib:type-name="OrenCMLogoutReason"
                 glib:get-type="oren_cmlogout_reason_get_type"
                 c:type="OrenCMLogoutReason">
      <member name="unknown"
              value="0"
              c:identifier="OREN_CMLOGOUT_REASON_UNKNOWN"
              glib:nick="unknown"/>
      <member name="normal"
              value="1"
              c:identifier="OREN_CMLOGOUT_REASON_NORMAL"
              glib:nick="normal"/>
      <member name="disconnect"
              value="2"
              c:identifier="OREN_CMLOGOUT_REASON_DISCONNECT"
              glib:nick="disconnect"/>
      <member name="kickout"
              value="3"
              c:identifier="OREN_CMLOGOUT_REASON_KICKOUT"
              glib:nick="kickout"/>
    </enumeration>
    <record name="CMRequest" c:type="OrenCMRequest" disguised="1">
    </record>
    <enumeration name="CMRequestResult"
                 glib:type-name="OrenCMRequestResult"
                 glib:get-type="oren_cmrequest_result_get_type"
                 c:type="OrenCMRequestResult">
      <member name="unknown"
              value="0"
              c:identifier="OREN_CMREQUEST_RESULT_UNKNOWN"
              glib:nick="unknown"/>
      <member name="success"
              value="1"
              c:identifier="OREN_CMREQUEST_RESULT_SUCCESS"
              glib:nick="success"/>
      <member name="timeout"
              value="2"
              c:identifier="OREN_CMREQUEST_RESULT_TIMEOUT"
              glib:nick="timeout"/>
      <member name="svrinit"
              value="3"
              c:identifier="OREN_CMREQUEST_RESULT_SVRINIT"
              glib:nick="svrinit"/>
      <member name="nosig"
              value="4"
              c:identifier="OREN_CMREQUEST_RESULT_NOSIG"
              glib:nick="nosig"/>
      <member name="errsig"
              value="5"
              c:identifier="OREN_CMREQUEST_RESULT_ERRSIG"
              glib:nick="errsig"/>
      <member name="errcver"
              value="6"
              c:identifier="OREN_CMREQUEST_RESULT_ERRCVER"
              glib:nick="errcver"/>
      <member name="errsver"
              value="7"
              c:identifier="OREN_CMREQUEST_RESULT_ERRSVER"
              glib:nick="errsver"/>
    </enumeration>
    <constant name="CMSLAVE_SESSION_LOST_DIFF"
              value="50"
              c:type="OREN_CMSLAVE_SESSION_LOST_DIFF">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="CMSLAVE_SESSION_LOST_LIMIT"
              value="500"
              c:type="OREN_CMSLAVE_SESSION_LOST_LIMIT">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="CMSLAVE_SESSION_USER_LIMIT"
              value="100"
              c:type="OREN_CMSLAVE_SESSION_USER_LIMIT">
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="CMServer"
           c:symbol-prefix="cmserver"
           c:type="OrenCMServer"
           parent="NCPacketHandler"
           glib:type-name="OrenCMServer"
           glib:get-type="oren_cmserver_get_type"
           glib:type-struct="CMServerClass">
      <constructor name="new" c:identifier="oren_cmserver_new">
        <return-value transfer-ownership="full">
          <type name="CMServer" c:type="OrenCMServer*"/>
        </return-value>
      </constructor>
      <virtual-method name="add_slave">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="slave" transfer-ownership="none">
            <type name="CMSlaveSession" c:type="OrenCMSlaveSession*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_slave">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="slave" transfer-ownership="none">
            <type name="CMSlaveSession" c:type="OrenCMSlaveSession*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="close" c:identifier="oren_cmserver_close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="oren_cmserver_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="lookup_slave" c:identifier="oren_cmserver_lookup_slave">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #OrenCMSlaveSession or %NULL if not found. Free the returned object with g_object_unref().</doc>
          <type name="CMSlaveSession" c:type="OrenCMSlaveSession*"/>
        </return-value>
        <parameters>
          <parameter name="slave_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the name of the slave to lookup</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open" c:identifier="oren_cmserver_open">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="server_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="initialize_time" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="reactor" transfer-ownership="none">
            <type name="NCReactor" c:type="OrenNCReactor*"/>
          </parameter>
          <parameter name="sock_slave" transfer-ownership="none">
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
          <parameter name="sock_client" transfer-ownership="none">
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
          <parameter name="max_req_slaves" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="signature" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="fixed_schedule" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="slave_count" c:identifier="oren_cmserver_slave_count">
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="NCPacketHandler" c:type="OrenNCPacketHandler"/>
      </field>
      <field name="priv">
        <type name="CMServerPrivate" c:type="OrenCMServerPrivate*"/>
      </field>
      <glib:signal name="add-slave" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="CMSlaveSession"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="remove-slave" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="CMSlaveSession"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CMServerClass"
            c:type="OrenCMServerClass"
            glib:is-gtype-struct-for="CMServer">
      <field name="parent_class">
        <type name="NCPacketHandlerClass" c:type="OrenNCPacketHandlerClass"/>
      </field>
      <field name="add_slave">
        <callback name="add_slave">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="CMServer" c:type="OrenCMServer*"/>
            </parameter>
            <parameter name="slave" transfer-ownership="none">
              <type name="CMSlaveSession" c:type="OrenCMSlaveSession*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_slave">
        <callback name="remove_slave">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="CMServer" c:type="OrenCMServer*"/>
            </parameter>
            <parameter name="slave" transfer-ownership="none">
              <type name="CMSlaveSession" c:type="OrenCMSlaveSession*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="CMServerPrivate" c:type="OrenCMServerPrivate" disguised="1">
    </record>
    <class name="CMSlave"
           c:symbol-prefix="cmslave"
           c:type="OrenCMSlave"
           parent="NCPacketHandler"
           glib:type-name="OrenCMSlave"
           glib:get-type="oren_cmslave_get_type"
           glib:type-struct="CMSlaveClass">
      <constructor name="new" c:identifier="oren_cmslave_new">
        <return-value transfer-ownership="full">
          <type name="CMSlave" c:type="OrenCMSlave*"/>
        </return-value>
      </constructor>
      <virtual-method name="login">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="CMLoginResult" c:type="OrenCMLoginResult"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="logout">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="reason" transfer-ownership="none">
            <type name="CMLogoutReason" c:type="OrenCMLogoutReason"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_channels" c:identifier="oren_cmslave_add_channels">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="channels" transfer-ownership="none">
            <doc xml:whitespace="preserve">list of channels</doc>
            <type name="GLib.SList" c:type="GSList*">
              <type name="utf8"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="oren_cmslave_close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_group" c:identifier="oren_cmslave_get_group">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="oren_cmslave_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_state" c:identifier="oren_cmslave_get_state">
        <return-value transfer-ownership="none">
          <type name="NCOnlineState" c:type="OrenNCOnlineState"/>
        </return-value>
      </method>
      <method name="login" c:identifier="oren_cmslave_login">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="service" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="slave_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slave_group" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="logout" c:identifier="oren_cmslave_logout">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="open" c:identifier="oren_cmslave_open">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="reactor" transfer-ownership="none">
            <type name="NCReactor" c:type="OrenNCReactor*"/>
          </parameter>
          <parameter name="socket" transfer-ownership="none">
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
          <parameter name="signature" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="max_channel_count" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="max_user_count" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_channels"
              c:identifier="oren_cmslave_remove_channels">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="channels" transfer-ownership="none">
            <doc xml:whitespace="preserve">list of channels</doc>
            <type name="GLib.SList" c:type="GSList*">
              <type name="utf8"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="server_version" c:identifier="oren_cmslave_server_version">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="update_workload"
              c:identifier="oren_cmslave_update_workload">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="user_count" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="byte_rate" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="lost_rate" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NCPacketHandler" c:type="OrenNCPacketHandler"/>
      </field>
      <field name="priv">
        <type name="CMSlavePrivate" c:type="OrenCMSlavePrivate*"/>
      </field>
      <glib:signal name="login" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="CMLoginResult"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="logout" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="CMLogoutReason"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CMSlaveClass"
            c:type="OrenCMSlaveClass"
            glib:is-gtype-struct-for="CMSlave">
      <field name="parent_class">
        <type name="NCPacketHandlerClass" c:type="OrenNCPacketHandlerClass"/>
      </field>
      <field name="login">
        <callback name="login">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="CMSlave" c:type="OrenCMSlave*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="CMLoginResult" c:type="OrenCMLoginResult"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="logout">
        <callback name="logout">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="CMSlave" c:type="OrenCMSlave*"/>
            </parameter>
            <parameter name="reason" transfer-ownership="none">
              <type name="CMLogoutReason" c:type="OrenCMLogoutReason"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="CMSlaveInfo"
           c:symbol-prefix="cmslave_info"
           c:type="OrenCMSlaveInfo"
           parent="GObject.Object"
           glib:type-name="OrenCMSlaveInfo"
           glib:get-type="oren_cmslave_info_get_type"
           glib:type-struct="CMSlaveInfoClass">
      <constructor name="new" c:identifier="oren_cmslave_info_new">
        <return-value transfer-ownership="full">
          <type name="CMSlaveInfo" c:type="OrenCMSlaveInfo*"/>
        </return-value>
        <parameters>
          <parameter name="slave_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slave_group" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_address" c:identifier="oren_cmslave_info_get_address">
        <doc xml:whitespace="preserve">Get an socket address of the slave info.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenNCSockaddr or %NULL on error.</doc>
          <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
        </return-value>
      </method>
      <method name="get_channel" c:identifier="oren_cmslave_info_get_channel">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_group" c:identifier="oren_cmslave_info_get_group">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="oren_cmslave_info_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="CMSlaveInfoPrivate" c:type="OrenCMSlaveInfoPrivate*"/>
      </field>
    </class>
    <record name="CMSlaveInfoClass"
            c:type="OrenCMSlaveInfoClass"
            glib:is-gtype-struct-for="CMSlaveInfo">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="CMSlaveInfoPrivate"
            c:type="OrenCMSlaveInfoPrivate"
            disguised="1">
    </record>
    <record name="CMSlavePrivate" c:type="OrenCMSlavePrivate" disguised="1">
    </record>
    <class name="CMSlaveSession"
           c:symbol-prefix="cmslave_session"
           c:type="OrenCMSlaveSession"
           parent="GObject.Object"
           glib:type-name="OrenCMSlaveSession"
           glib:get-type="oren_cmslave_session_get_type"
           glib:type-struct="CMSlaveSessionClass">
      <constructor name="new" c:identifier="oren_cmslave_session_new">
        <return-value transfer-ownership="full">
          <type name="CMSlaveSession" c:type="OrenCMSlaveSession*"/>
        </return-value>
        <parameters>
          <parameter name="protocol_version" transfer-ownership="none">
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="client_version" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slave_id" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="login_code" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="slave_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slave_group" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="max_channel_count" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="max_user_count" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="server" transfer-ownership="none">
            <type name="CMServer" c:type="OrenCMServer*"/>
          </parameter>
          <parameter name="socket" transfer-ownership="none">
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="service" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="client_version"
              c:identifier="oren_cmslave_session_client_version">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_address"
              c:identifier="oren_cmslave_session_get_address">
        <doc xml:whitespace="preserve">Get the remote address of a slave.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenNCSockaddr.</doc>
          <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
        </return-value>
      </method>
      <method name="get_group" c:identifier="oren_cmslave_session_get_group">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_id" c:identifier="oren_cmslave_session_get_id">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_login_code"
              c:identifier="oren_cmslave_session_get_login_code">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="oren_cmslave_session_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_server" c:identifier="oren_cmslave_session_get_server">
        <doc xml:whitespace="preserve">Get the server of the slave.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenCMServer.</doc>
          <type name="CMServer" c:type="OrenCMServer*"/>
        </return-value>
      </method>
      <method name="get_service"
              c:identifier="oren_cmslave_session_get_service">
        <doc xml:whitespace="preserve">Get the service address of a slave.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenNCSockaddr.</doc>
          <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
        </return-value>
      </method>
      <method name="get_workload"
              c:identifier="oren_cmslave_session_get_workload">
        <doc xml:whitespace="preserve">Get the workload information of a slave.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:whitespace="preserve">Store the workload information</doc>
            <type name="CMSlaveWorkload" c:type="OrenCMSlaveWorkload*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_channel"
              c:identifier="oren_cmslave_session_has_channel">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="channel_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="active" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_overloaded"
              c:identifier="oren_cmslave_session_is_overloaded">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="protocol_version"
              c:identifier="oren_cmslave_session_protocol_version">
        <return-value transfer-ownership="none">
          <type name="guint8" c:type="guint8"/>
        </return-value>
      </method>
      <method name="recv" c:identifier="oren_cmslave_session_recv">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="from" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="req_channel"
              c:identifier="oren_cmslave_session_req_channel">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="channel_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send" c:identifier="oren_cmslave_session_send">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="work" c:identifier="oren_cmslave_session_work">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tv" transfer-ownership="none">
            <type name="gpointer" c:type="timeval*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="CMSlaveSessionPrivate"
              c:type="OrenCMSlaveSessionPrivate*"/>
      </field>
      <glib:signal name="add-channel" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="remove-channel" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="update-workload" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CMSlaveSessionClass"
            c:type="OrenCMSlaveSessionClass"
            glib:is-gtype-struct-for="CMSlaveSession">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="add_channel">
        <callback name="add_channel">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="CMServer" c:type="OrenCMServer*"/>
            </parameter>
            <parameter name="channel" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_channel">
        <callback name="remove_channel">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="CMServer" c:type="OrenCMServer*"/>
            </parameter>
            <parameter name="channel" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="update_workload">
        <callback name="update_workload">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="CMServer" c:type="OrenCMServer*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <type name="CMSlaveWorkload" c:type="OrenCMSlaveWorkload*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="CMSlaveSessionPrivate"
            c:type="OrenCMSlaveSessionPrivate"
            disguised="1">
    </record>
    <record name="CMSlaveWorkload" c:type="OrenCMSlaveWorkload">
      <field name="user_count" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="byte_rate" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="lost_rate" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
    </record>
    <class name="DCChannel"
           c:symbol-prefix="dcchannel"
           c:type="OrenDCChannel"
           parent="NCPacketHandler"
           glib:type-name="OrenDCChannel"
           glib:get-type="oren_dcchannel_get_type"
           glib:type-struct="DCChannelClass">
      <constructor name="new" c:identifier="oren_dcchannel_new">
        <return-value transfer-ownership="full">
          <type name="DCChannel" c:type="OrenDCChannel*"/>
        </return-value>
      </constructor>
      <virtual-method name="add_user">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="user" transfer-ownership="none">
            <type name="DCUser" c:type="OrenDCUser*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="alone">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="alone" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close" invoker="close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <virtual-method name="remove_user" invoker="remove_user">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="user" transfer-ownership="none">
            <type name="DCUser" c:type="OrenDCUser*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_user" c:identifier="oren_dcchannel_add_user">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="protocol_version" transfer-ownership="none">
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="client_version" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="network_type" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="from" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="user_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="login_code" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="oren_dcchannel_close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="freeze" c:identifier="oren_dcchannel_freeze">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_address" c:identifier="oren_dcchannel_get_address">
        <doc xml:whitespace="preserve">Get the local address of a channel.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenNCSockaddr.</doc>
          <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="oren_dcchannel_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_parent" c:identifier="oren_dcchannel_get_parent">
        <doc xml:whitespace="preserve">Get the parent connection of the channel.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenDCClient.</doc>
          <type name="DCClient" c:type="OrenDCClient*"/>
        </return-value>
      </method>
      <method name="get_signature" c:identifier="oren_dcchannel_get_signature">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_transfer_status"
              c:identifier="oren_dcchannel_get_transfer_status">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="status" transfer-ownership="none">
            <type name="DCTransferStatus" c:type="OrenDCTransferStatus*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_user" c:identifier="oren_dcchannel_get_user">
        <doc xml:whitespace="preserve">Find a user in the channel.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the #OrenDCUser with user id @user_id, which must be g_object_ref()'d if it will be stored</doc>
          <type name="DCUser" c:type="OrenDCUser*"/>
        </return-value>
        <parameters>
          <parameter name="user_id" transfer-ownership="none">
            <doc xml:whitespace="preserve">the user id</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_frozen" c:identifier="oren_dcchannel_is_frozen">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="multicast_data"
              c:identifier="oren_dcchannel_multicast_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="skip" transfer-ownership="none">
            <type name="DCUser" c:type="OrenDCUser*"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="multicast_message"
              c:identifier="oren_dcchannel_multicast_message">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="skip" transfer-ownership="none">
            <type name="DCUser" c:type="OrenDCUser*"/>
          </parameter>
          <parameter name="message" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="open" c:identifier="oren_dcchannel_open">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="server" transfer-ownership="none">
            <type name="DCServer" c:type="OrenDCServer*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="NCInetAddress" c:type="OrenNCInetAddress*"/>
          </parameter>
          <parameter name="parent_addr" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="channel_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="enable_p2p" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="real_flush" c:identifier="oren_dcchannel_real_flush">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="session_id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="real_multicast"
              c:identifier="oren_dcchannel_real_multicast">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="session_id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="skip" transfer-ownership="none">
            <type name="DCUser" c:type="OrenDCUser*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
          <parameter name="filter" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer*"/>
          </parameter>
          <parameter name="flush" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_user" c:identifier="oren_dcchannel_remove_user">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="user_id" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="user_count" c:identifier="oren_dcchannel_user_count">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="NCPacketHandler" c:type="OrenNCPacketHandler"/>
      </field>
      <field name="priv">
        <type name="DCChannelPrivate" c:type="OrenDCChannelPrivate*"/>
      </field>
      <glib:signal name="add-user" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="DCUser"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="alone" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="close" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
      </glib:signal>
      <glib:signal name="remove-user" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="DCUser"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DCChannelClass"
            c:type="OrenDCChannelClass"
            glib:is-gtype-struct-for="DCChannel">
      <field name="parent_class">
        <type name="NCPacketHandlerClass" c:type="OrenNCPacketHandlerClass"/>
      </field>
      <field name="add_user">
        <callback name="add_user">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCChannel" c:type="OrenDCChannel*"/>
            </parameter>
            <parameter name="user" transfer-ownership="none">
              <type name="DCUser" c:type="OrenDCUser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_user">
        <callback name="remove_user">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCChannel" c:type="OrenDCChannel*"/>
            </parameter>
            <parameter name="user" transfer-ownership="none">
              <type name="DCUser" c:type="OrenDCUser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="alone">
        <callback name="alone">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCChannel" c:type="OrenDCChannel*"/>
            </parameter>
            <parameter name="alone" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close">
        <callback name="close">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCChannel" c:type="OrenDCChannel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DCChannelPrivate"
            c:type="OrenDCChannelPrivate"
            disguised="1">
    </record>
    <class name="DCClient"
           c:symbol-prefix="dcclient"
           c:type="OrenDCClient"
           parent="NCPacketHandler"
           glib:type-name="OrenDCClient"
           glib:get-type="oren_dcclient_get_type"
           glib:type-struct="DCClientClass">
      <constructor name="new" c:identifier="oren_dcclient_new">
        <return-value transfer-ownership="full">
          <type name="DCClient" c:type="OrenDCClient*"/>
        </return-value>
      </constructor>
      <virtual-method name="alone">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="alone" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close" invoker="close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <virtual-method name="data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="login">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="DCLoginResult" c:type="OrenDCLoginResult"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="logout">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="reason" transfer-ownership="none">
            <type name="DCLogoutReason" c:type="OrenDCLogoutReason"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="message">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="p2p">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="ping">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="DCPingResult" c:type="OrenDCPingResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="quality">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="receive" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="work">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <method name="close" c:identifier="oren_dcclient_close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="enable_p2p" c:identifier="oren_dcclient_enable_p2p">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_channel_name"
              c:identifier="oren_dcclient_get_channel_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_mtpeer" c:identifier="oren_dcclient_get_mtpeer">
        <doc xml:whitespace="preserve">Get the multicast tree peer of the client.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenMTPeer.</doc>
          <type name="MTPeer" c:type="OrenMTPeer*"/>
        </return-value>
      </method>
      <method name="get_signature" c:identifier="oren_dcclient_get_signature">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_state" c:identifier="oren_dcclient_get_state">
        <return-value transfer-ownership="none">
          <type name="NCOnlineState" c:type="OrenNCOnlineState"/>
        </return-value>
      </method>
      <method name="get_transfer_status"
              c:identifier="oren_dcclient_get_transfer_status">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="status" transfer-ownership="none">
            <type name="DCTransferStatus" c:type="OrenDCTransferStatus*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_user_id" c:identifier="oren_dcclient_get_user_id">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_user_name" c:identifier="oren_dcclient_get_user_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="is_alone" c:identifier="oren_dcclient_is_alone">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="login" c:identifier="oren_dcclient_login">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="login_time" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="channel_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="network_type" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="logout" c:identifier="oren_dcclient_logout">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="open" c:identifier="oren_dcclient_open">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="reactor" transfer-ownership="none">
            <type name="NCReactor" c:type="OrenNCReactor*"/>
          </parameter>
          <parameter name="socket" transfer-ownership="none">
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
          <parameter name="signature" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="statistics" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="ping" c:identifier="oren_dcclient_ping">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="CMSlaveInfo" c:type="OrenCMSlaveInfo*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="real_enable_p2p"
              c:identifier="oren_dcclient_real_enable_p2p">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="real_flush" c:identifier="oren_dcclient_real_flush">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="session_id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="real_send" c:identifier="oren_dcclient_real_send">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="session_id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
          <parameter name="flush" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="real_set_quality"
              c:identifier="oren_dcclient_real_set_quality">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="send" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="receive" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_data" c:identifier="oren_dcclient_send_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_message" c:identifier="oren_dcclient_send_message">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="server_name" c:identifier="oren_dcclient_server_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="server_version"
              c:identifier="oren_dcclient_server_version">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="set_quality" c:identifier="oren_dcclient_set_quality">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="send" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="receive" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NCPacketHandler" c:type="OrenNCPacketHandler"/>
      </field>
      <field name="priv">
        <type name="DCClientPrivate" c:type="OrenDCClientPrivate*"/>
      </field>
      <glib:signal name="alone" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="close" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
      </glib:signal>
      <glib:signal name="data" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="login" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="DCLoginResult"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="logout" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="DCLogoutReason"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="message" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="guint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="p2p" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="ping" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="DCPingResult"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="quality" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="work" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="DCClientClass"
            c:type="OrenDCClientClass"
            glib:is-gtype-struct-for="DCClient">
      <field name="parent_class">
        <type name="NCPacketHandlerClass" c:type="OrenNCPacketHandlerClass"/>
      </field>
      <field name="ping">
        <callback name="ping">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCClient" c:type="OrenDCClient*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="DCPingResult" c:type="OrenDCPingResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="login">
        <callback name="login">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCClient" c:type="OrenDCClient*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="DCLoginResult" c:type="OrenDCLoginResult"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="logout">
        <callback name="logout">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCClient" c:type="OrenDCClient*"/>
            </parameter>
            <parameter name="reason" transfer-ownership="none">
              <type name="DCLogoutReason" c:type="OrenDCLogoutReason"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="quality">
        <callback name="quality">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCClient" c:type="OrenDCClient*"/>
            </parameter>
            <parameter name="receive" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="message">
        <callback name="message">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCClient" c:type="OrenDCClient*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="data">
        <callback name="data">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCClient" c:type="OrenDCClient*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="alone">
        <callback name="alone">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCClient" c:type="OrenDCClient*"/>
            </parameter>
            <parameter name="alone" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="p2p">
        <callback name="p2p">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCClient" c:type="OrenDCClient*"/>
            </parameter>
            <parameter name="enable" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="work">
        <callback name="work">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCClient" c:type="OrenDCClient*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close">
        <callback name="close">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCClient" c:type="OrenDCClient*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DCClientPrivate" c:type="OrenDCClientPrivate" disguised="1">
    </record>
    <class name="DCFactory"
           c:symbol-prefix="dcfactory"
           c:type="OrenDCFactory"
           parent="GObject.Object"
           glib:type-name="OrenDCFactory"
           glib:get-type="oren_dcfactory_get_type"
           glib:type-struct="DCFactoryClass">
      <constructor name="new" c:identifier="oren_dcfactory_new">
        <return-value transfer-ownership="full">
          <type name="DCFactory" c:type="OrenDCFactory*"/>
        </return-value>
      </constructor>
      <virtual-method name="make_channel" invoker="make_channel">
        <doc xml:whitespace="preserve">Make a channel with the provided parameters.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #OrenDCChannel.</doc>
          <type name="DCChannel" c:type="OrenDCChannel*"/>
        </return-value>
        <parameters>
          <parameter name="server" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenDCServer</doc>
            <type name="DCServer" c:type="OrenDCServer*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCInetAddress</doc>
            <type name="NCInetAddress" c:type="OrenNCInetAddress*"/>
          </parameter>
          <parameter name="parent_addr" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCSockaddr</doc>
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="channel_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the channel name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="enable_p2p" transfer-ownership="none">
            <doc xml:whitespace="preserve">whether enable P2P</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="make_client" invoker="make_client">
        <doc xml:whitespace="preserve">Make a client with the provided parameters.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #OrenDCClient.</doc>
          <type name="DCClient" c:type="OrenDCClient*"/>
        </return-value>
        <parameters>
          <parameter name="reactor" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCReactor</doc>
            <type name="NCReactor" c:type="OrenNCReactor*"/>
          </parameter>
          <parameter name="socket" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCSocket</doc>
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
          <parameter name="signature" transfer-ownership="none">
            <doc xml:whitespace="preserve">the login signature</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="statistics" transfer-ownership="none">
            <doc xml:whitespace="preserve">do transmission statistics</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="make_user" invoker="make_user">
        <doc xml:whitespace="preserve">Make a user with the provided parameters.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #OrenDCUser.</doc>
          <type name="DCUser" c:type="OrenDCUser*"/>
        </return-value>
        <parameters>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenDCChannel</doc>
            <type name="DCChannel" c:type="OrenDCChannel*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCSockaddr</doc>
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCBuffer</doc>
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
          <parameter name="user_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the user name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="client_version" transfer-ownership="none">
            <doc xml:whitespace="preserve">the client program version</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="network_type" transfer-ownership="none">
            <doc xml:whitespace="preserve">the client network type</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_id" transfer-ownership="none">
            <doc xml:whitespace="preserve">the user ID</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="login_code" transfer-ownership="none">
            <doc xml:whitespace="preserve">the login code</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="protocol_version" transfer-ownership="none">
            <doc xml:whitespace="preserve">the client protocol version</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="make_channel" c:identifier="oren_dcfactory_make_channel">
        <doc xml:whitespace="preserve">Make a channel with the provided parameters.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #OrenDCChannel.</doc>
          <type name="DCChannel" c:type="OrenDCChannel*"/>
        </return-value>
        <parameters>
          <parameter name="server" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenDCServer</doc>
            <type name="DCServer" c:type="OrenDCServer*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCInetAddress</doc>
            <type name="NCInetAddress" c:type="OrenNCInetAddress*"/>
          </parameter>
          <parameter name="parent_addr" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCSockaddr</doc>
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="channel_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the channel name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="enable_p2p" transfer-ownership="none">
            <doc xml:whitespace="preserve">whether enable P2P</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="make_client" c:identifier="oren_dcfactory_make_client">
        <doc xml:whitespace="preserve">Make a client with the provided parameters.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #OrenDCClient.</doc>
          <type name="DCClient" c:type="OrenDCClient*"/>
        </return-value>
        <parameters>
          <parameter name="reactor" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCReactor</doc>
            <type name="NCReactor" c:type="OrenNCReactor*"/>
          </parameter>
          <parameter name="socket" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCSocket</doc>
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
          <parameter name="signature" transfer-ownership="none">
            <doc xml:whitespace="preserve">the login signature</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="statistics" transfer-ownership="none">
            <doc xml:whitespace="preserve">do transmission statistics</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="make_user" c:identifier="oren_dcfactory_make_user">
        <doc xml:whitespace="preserve">Make a user with the provided parameters.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #OrenDCUser.</doc>
          <type name="DCUser" c:type="OrenDCUser*"/>
        </return-value>
        <parameters>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenDCChannel</doc>
            <type name="DCChannel" c:type="OrenDCChannel*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCSockaddr</doc>
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCBuffer</doc>
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
          <parameter name="user_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the user name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="client_version" transfer-ownership="none">
            <doc xml:whitespace="preserve">the client program version</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="network_type" transfer-ownership="none">
            <doc xml:whitespace="preserve">the client network type</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_id" transfer-ownership="none">
            <doc xml:whitespace="preserve">the user ID</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="login_code" transfer-ownership="none">
            <doc xml:whitespace="preserve">the login code</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="protocol_version" transfer-ownership="none">
            <doc xml:whitespace="preserve">the client protocol version</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DCFactoryClass"
            c:type="OrenDCFactoryClass"
            glib:is-gtype-struct-for="DCFactory">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="make_channel">
        <callback name="make_channel">
          <return-value transfer-ownership="full">
            <doc xml:whitespace="preserve">a #OrenDCChannel.</doc>
            <type name="DCChannel" c:type="OrenDCChannel*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCFactory" c:type="OrenDCFactory*"/>
            </parameter>
            <parameter name="server" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #OrenDCServer</doc>
              <type name="DCServer" c:type="OrenDCServer*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #OrenNCInetAddress</doc>
              <type name="NCInetAddress" c:type="OrenNCInetAddress*"/>
            </parameter>
            <parameter name="parent_addr" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #OrenNCSockaddr</doc>
              <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
            </parameter>
            <parameter name="channel_name" transfer-ownership="none">
              <doc xml:whitespace="preserve">the channel name</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="enable_p2p" transfer-ownership="none">
              <doc xml:whitespace="preserve">whether enable P2P</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="make_user">
        <callback name="make_user">
          <return-value transfer-ownership="full">
            <doc xml:whitespace="preserve">a #OrenDCUser.</doc>
            <type name="DCUser" c:type="OrenDCUser*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCFactory" c:type="OrenDCFactory*"/>
            </parameter>
            <parameter name="channel" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #OrenDCChannel</doc>
              <type name="DCChannel" c:type="OrenDCChannel*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #OrenNCSockaddr</doc>
              <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #OrenNCBuffer</doc>
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
            <parameter name="user_name" transfer-ownership="none">
              <doc xml:whitespace="preserve">the user name</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="client_version" transfer-ownership="none">
              <doc xml:whitespace="preserve">the client program version</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="network_type" transfer-ownership="none">
              <doc xml:whitespace="preserve">the client network type</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="user_id" transfer-ownership="none">
              <doc xml:whitespace="preserve">the user ID</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="login_code" transfer-ownership="none">
              <doc xml:whitespace="preserve">the login code</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="protocol_version" transfer-ownership="none">
              <doc xml:whitespace="preserve">the client protocol version</doc>
              <type name="guint8" c:type="guint8"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="make_client">
        <callback name="make_client">
          <return-value transfer-ownership="full">
            <doc xml:whitespace="preserve">a #OrenDCClient.</doc>
            <type name="DCClient" c:type="OrenDCClient*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCFactory" c:type="OrenDCFactory*"/>
            </parameter>
            <parameter name="reactor" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #OrenNCReactor</doc>
              <type name="NCReactor" c:type="OrenNCReactor*"/>
            </parameter>
            <parameter name="socket" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #OrenNCSocket</doc>
              <type name="NCSocket" c:type="OrenNCSocket*"/>
            </parameter>
            <parameter name="signature" transfer-ownership="none">
              <doc xml:whitespace="preserve">the login signature</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="statistics" transfer-ownership="none">
              <doc xml:whitespace="preserve">do transmission statistics</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DCFactoryPrivate"
            c:type="OrenDCFactoryPrivate"
            disguised="1">
    </record>
    <class name="DCLogin"
           c:symbol-prefix="dclogin"
           c:type="OrenDCLogin"
           parent="NCHandler"
           glib:type-name="OrenDCLogin"
           glib:get-type="oren_dclogin_get_type"
           glib:type-struct="DCLoginClass">
      <constructor name="new" c:identifier="oren_dclogin_new">
        <return-value transfer-ownership="full">
          <type name="DCLogin" c:type="OrenDCLogin*"/>
        </return-value>
      </constructor>
      <function name="parse_address" c:identifier="oren_dclogin_parse_address">
        <doc xml:whitespace="preserve">Parse an address.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #OrenNCSockaddr.</doc>
          <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <doc xml:whitespace="preserve">the string representation of address</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="is_cmaddr"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">return whether is an cluster manager address</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="choose">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="slave" transfer-ownership="none">
            <type name="CMSlaveInfo" c:type="OrenCMSlaveInfo*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="login">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="DCLoginResult" c:type="OrenDCLoginResult"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="logout">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="reason" transfer-ownership="none">
            <type name="DCLogoutReason" c:type="OrenDCLogoutReason"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="close" c:identifier="oren_dclogin_close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_cmclient" c:identifier="oren_dclogin_get_cmclient">
        <doc xml:whitespace="preserve">Get the #OrenCMClient used by the login.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenCMClient.</doc>
          <type name="CMClient" c:type="OrenCMClient*"/>
        </return-value>
      </method>
      <method name="get_dcclient" c:identifier="oren_dclogin_get_dcclient">
        <doc xml:whitespace="preserve">Get the #OrenDCClient used by the login.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenDCClient.</doc>
          <type name="DCClient" c:type="OrenDCClient*"/>
        </return-value>
      </method>
      <method name="get_state" c:identifier="oren_dclogin_get_state">
        <return-value transfer-ownership="none">
          <type name="NCOnlineState" c:type="OrenNCOnlineState"/>
        </return-value>
      </method>
      <method name="login" c:identifier="oren_dclogin_login">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="is_cmaddr" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="group_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slave_count" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="channel_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="network_type" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="logout" c:identifier="oren_dclogin_logout">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="open" c:identifier="oren_dclogin_open">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="reactor" transfer-ownership="none">
            <type name="NCReactor" c:type="OrenNCReactor*"/>
          </parameter>
          <parameter name="cmclient" transfer-ownership="none">
            <type name="CMClient" c:type="OrenCMClient*"/>
          </parameter>
          <parameter name="dcclient" transfer-ownership="none">
            <type name="DCClient" c:type="OrenDCClient*"/>
          </parameter>
          <parameter name="factory" transfer-ownership="none">
            <type name="DCFactory" c:type="OrenDCFactory*"/>
          </parameter>
          <parameter name="signature" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="statistics" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NCPacketHandler" c:type="OrenNCPacketHandler"/>
      </field>
      <field name="priv">
        <type name="DCLoginPrivate" c:type="OrenDCLoginPrivate*"/>
      </field>
      <glib:signal name="choose" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="CMSlaveInfo"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="login" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="DCLoginResult"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="logout" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="DCLogoutReason"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DCLoginClass"
            c:type="OrenDCLoginClass"
            glib:is-gtype-struct-for="DCLogin">
      <field name="parent_class">
        <type name="NCPacketHandlerClass" c:type="OrenNCPacketHandlerClass"/>
      </field>
      <field name="choose">
        <callback name="choose">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCLogin" c:type="OrenDCLogin*"/>
            </parameter>
            <parameter name="slave" transfer-ownership="none">
              <type name="CMSlaveInfo" c:type="OrenCMSlaveInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="login">
        <callback name="login">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCLogin" c:type="OrenDCLogin*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="DCLoginResult" c:type="OrenDCLoginResult"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="logout">
        <callback name="logout">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCLogin" c:type="OrenDCLogin*"/>
            </parameter>
            <parameter name="reason" transfer-ownership="none">
              <type name="DCLogoutReason" c:type="OrenDCLogoutReason"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DCLoginPrivate" c:type="OrenDCLoginPrivate" disguised="1">
    </record>
    <enumeration name="DCLoginResult"
                 glib:type-name="OrenDCLoginResult"
                 glib:get-type="oren_dclogin_result_get_type"
                 c:type="OrenDCLoginResult">
      <member name="unknown"
              value="0"
              c:identifier="OREN_DCLOGIN_RESULT_UNKNOWN"
              glib:nick="unknown"/>
      <member name="success"
              value="1"
              c:identifier="OREN_DCLOGIN_RESULT_SUCCESS"
              glib:nick="success"/>
      <member name="timeout"
              value="2"
              c:identifier="OREN_DCLOGIN_RESULT_TIMEOUT"
              glib:nick="timeout"/>
      <member name="errcver"
              value="3"
              c:identifier="OREN_DCLOGIN_RESULT_ERRCVER"
              glib:nick="errcver"/>
      <member name="errsver"
              value="4"
              c:identifier="OREN_DCLOGIN_RESULT_ERRSVER"
              glib:nick="errsver"/>
      <member name="errsig"
              value="5"
              c:identifier="OREN_DCLOGIN_RESULT_ERRSIG"
              glib:nick="errsig"/>
      <member name="errusername"
              value="6"
              c:identifier="OREN_DCLOGIN_RESULT_ERRUSERNAME"
              glib:nick="errusername"/>
      <member name="errcnlname"
              value="7"
              c:identifier="OREN_DCLOGIN_RESULT_ERRCNLNAME"
              glib:nick="errcnlname"/>
      <member name="erroverload"
              value="8"
              c:identifier="OREN_DCLOGIN_RESULT_ERROVERLOAD"
              glib:nick="erroverload"/>
      <member name="errsize"
              value="9"
              c:identifier="OREN_DCLOGIN_RESULT_ERRSIZE"
              glib:nick="errsize"/>
      <member name="errlcode"
              value="10"
              c:identifier="OREN_DCLOGIN_RESULT_ERRLCODE"
              glib:nick="errlcode"/>
      <member name="erraddr"
              value="11"
              c:identifier="OREN_DCLOGIN_RESULT_ERRADDR"
              glib:nick="erraddr"/>
      <member name="nosname"
              value="12"
              c:identifier="OREN_DCLOGIN_RESULT_NOSNAME"
              glib:nick="nosname"/>
      <member name="nocname"
              value="13"
              c:identifier="OREN_DCLOGIN_RESULT_NOCNAME"
              glib:nick="nocname"/>
      <member name="nosver"
              value="14"
              c:identifier="OREN_DCLOGIN_RESULT_NOSVER"
              glib:nick="nosver"/>
      <member name="nocver"
              value="15"
              c:identifier="OREN_DCLOGIN_RESULT_NOCVER"
              glib:nick="nocver"/>
      <member name="nonetype"
              value="16"
              c:identifier="OREN_DCLOGIN_RESULT_NONETYPE"
              glib:nick="nonetype"/>
      <member name="nosig"
              value="17"
              c:identifier="OREN_DCLOGIN_RESULT_NOSIG"
              glib:nick="nosig"/>
      <member name="svrinit"
              value="18"
              c:identifier="OREN_DCLOGIN_RESULT_SVRINIT"
              glib:nick="svrinit"/>
      <member name="errcmreq"
              value="19"
              c:identifier="OREN_DCLOGIN_RESULT_ERRCMREQ"
              glib:nick="errcmreq"/>
      <function name="to_string" c:identifier="oren_dclogin_result_to_string">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="DCLoginResult" c:type="OrenDCLoginResult"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="DCLogoutReason"
                 glib:type-name="OrenDCLogoutReason"
                 glib:get-type="oren_dclogout_reason_get_type"
                 c:type="OrenDCLogoutReason">
      <member name="unknown"
              value="0"
              c:identifier="OREN_DCLOGOUT_REASON_UNKNOWN"
              glib:nick="unknown"/>
      <member name="normal"
              value="1"
              c:identifier="OREN_DCLOGOUT_REASON_NORMAL"
              glib:nick="normal"/>
      <member name="disconnect"
              value="2"
              c:identifier="OREN_DCLOGOUT_REASON_DISCONNECT"
              glib:nick="disconnect"/>
      <member name="kickout"
              value="3"
              c:identifier="OREN_DCLOGOUT_REASON_KICKOUT"
              glib:nick="kickout"/>
      <member name="frozen"
              value="4"
              c:identifier="OREN_DCLOGOUT_REASON_FROZEN"
              glib:nick="frozen"/>
      <function name="to_string" c:identifier="oren_dclogout_reason_to_string">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="reason" transfer-ownership="none">
            <type name="DCLogoutReason" c:type="OrenDCLogoutReason"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="DCPingResult"
           c:symbol-prefix="dcping_result"
           c:type="OrenDCPingResult"
           parent="GObject.Object"
           glib:type-name="OrenDCPingResult"
           glib:get-type="oren_dcping_result_get_type"
           glib:type-struct="DCPingResultClass">
      <constructor name="new" c:identifier="oren_dcping_result_new">
        <return-value transfer-ownership="full">
          <type name="DCPingResult" c:type="OrenDCPingResult*"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="CMSlaveInfo" c:type="OrenCMSlaveInfo*"/>
          </parameter>
          <parameter name="rtt" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="user_count" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_info" c:identifier="oren_dcping_result_get_info">
        <doc xml:whitespace="preserve">Get the slave information of the ping result.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenCMSlaveInfo or %NULL on error.</doc>
          <type name="CMSlaveInfo" c:type="OrenCMSlaveInfo*"/>
        </return-value>
      </method>
      <method name="get_rtt" c:identifier="oren_dcping_result_get_rtt">
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_user_count"
              c:identifier="oren_dcping_result_get_user_count">
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
      </method>
      <method name="is_timeout" c:identifier="oren_dcping_result_is_timeout">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DCPingResultPrivate" c:type="OrenDCPingResultPrivate*"/>
      </field>
    </class>
    <record name="DCPingResultClass"
            c:type="OrenDCPingResultClass"
            glib:is-gtype-struct-for="DCPingResult">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="DCPingResultPrivate"
            c:type="OrenDCPingResultPrivate"
            disguised="1">
    </record>
    <class name="DCServer"
           c:symbol-prefix="dcserver"
           c:type="OrenDCServer"
           parent="NCPacketHandler"
           glib:type-name="OrenDCServer"
           glib:get-type="oren_dcserver_get_type"
           glib:type-struct="DCServerClass">
      <constructor name="new" c:identifier="oren_dcserver_new">
        <return-value transfer-ownership="full">
          <type name="DCServer" c:type="OrenDCServer*"/>
        </return-value>
      </constructor>
      <virtual-method name="add_channel">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="channel" transfer-ownership="none">
            <type name="DCChannel" c:type="OrenDCChannel*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="recv_ping">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="from" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_channel">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="channel" transfer-ownership="none">
            <type name="DCChannel" c:type="OrenDCChannel*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="channel_count" c:identifier="oren_dcserver_channel_count">
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
      </method>
      <method name="close" c:identifier="oren_dcserver_close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_channel" c:identifier="oren_dcserver_get_channel">
        <doc xml:whitespace="preserve">Gets a channel object from the server.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the #OrenDCChannel with channel name @channel_name, which must be g_object_ref()'d if it will be stored</doc>
          <type name="DCChannel" c:type="OrenDCChannel*"/>
        </return-value>
        <parameters>
          <parameter name="channel_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the channel name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="create_it" transfer-ownership="none">
            <doc xml:whitespace="preserve">create if the channel not exists</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_factory" c:identifier="oren_dcserver_get_factory">
        <doc xml:whitespace="preserve">Get the factory used by the server.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenDCFactory.</doc>
          <type name="DCFactory" c:type="OrenDCFactory*"/>
        </return-value>
      </method>
      <method name="get_group" c:identifier="oren_dcserver_get_group">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="oren_dcserver_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_signature" c:identifier="oren_dcserver_get_signature">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="open" c:identifier="oren_dcserver_open">
        <doc xml:whitespace="preserve">Start the server.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">TRUE of FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="reactor" transfer-ownership="none">
            <doc xml:whitespace="preserve">the reactor</doc>
            <type name="NCReactor" c:type="OrenNCReactor*"/>
          </parameter>
          <parameter name="socket" transfer-ownership="none">
            <doc xml:whitespace="preserve">the socket used for client login</doc>
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
          <parameter name="cluster_addr"
                     transfer-ownership="none"
                     allow-none="1">
            <doc xml:whitespace="preserve">the cluster monitor address</doc>
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="parent_addr"
                     transfer-ownership="none"
                     allow-none="1">
            <doc xml:whitespace="preserve">the parent cluster monitor address</doc>
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="factory" transfer-ownership="none">
            <type name="DCFactory" c:type="OrenDCFactory*"/>
          </parameter>
          <parameter name="slave_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slave_group" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="signature" transfer-ownership="none">
            <doc xml:whitespace="preserve">the login signature</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="max_channel_count" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="max_user_count" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="max_cpu_usage" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="enable_p2p" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="auto_freeze" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="NCPacketHandler" c:type="OrenNCPacketHandler"/>
      </field>
      <field name="priv">
        <type name="DCServerPrivate" c:type="OrenDCServerPrivate*"/>
      </field>
      <glib:signal name="add-channel" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="DCChannel"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="recv-ping" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCSockaddr"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="remove-channel" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="DCChannel"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DCServerClass"
            c:type="OrenDCServerClass"
            glib:is-gtype-struct-for="DCServer">
      <field name="parent_class">
        <type name="NCPacketHandlerClass" c:type="OrenNCPacketHandlerClass"/>
      </field>
      <field name="recv_ping">
        <callback name="recv_ping">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCServer" c:type="OrenDCServer*"/>
            </parameter>
            <parameter name="from" transfer-ownership="none">
              <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_channel">
        <callback name="add_channel">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCServer" c:type="OrenDCServer*"/>
            </parameter>
            <parameter name="channel" transfer-ownership="none">
              <type name="DCChannel" c:type="OrenDCChannel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_channel">
        <callback name="remove_channel">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCServer" c:type="OrenDCServer*"/>
            </parameter>
            <parameter name="channel" transfer-ownership="none">
              <type name="DCChannel" c:type="OrenDCChannel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DCServerPrivate" c:type="OrenDCServerPrivate" disguised="1">
    </record>
    <record name="DCTransferStatus" c:type="OrenDCTransferStatus">
      <field name="rtt" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="generate" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="send_data" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="recv_data" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="send_pkt" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="recv_pkt" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="send_retry" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="recv_retry" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="send_lost" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="recv_lost" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="duplicate" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
    </record>
    <class name="DCUser"
           c:symbol-prefix="dcuser"
           c:type="OrenDCUser"
           parent="GObject.Object"
           glib:type-name="OrenDCUser"
           glib:get-type="oren_dcuser_get_type"
           glib:type-struct="DCUserClass">
      <constructor name="new" c:identifier="oren_dcuser_new">
        <return-value transfer-ownership="full">
          <type name="DCUser" c:type="OrenDCUser*"/>
        </return-value>
      </constructor>
      <virtual-method name="data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="message">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="p2p">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="client_version" c:identifier="oren_dcuser_client_version">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="close" c:identifier="oren_dcuser_close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="enable_p2p" c:identifier="oren_dcuser_enable_p2p">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="flush" c:identifier="oren_dcuser_flush">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="session_id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_address" c:identifier="oren_dcuser_get_address">
        <doc xml:whitespace="preserve">Get the remote address of a user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenNCSockaddr.</doc>
          <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
        </return-value>
      </method>
      <method name="get_channel" c:identifier="oren_dcuser_get_channel">
        <doc xml:whitespace="preserve">Get the channel of the user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenDCChannel.</doc>
          <type name="DCChannel" c:type="OrenDCChannel*"/>
        </return-value>
      </method>
      <method name="get_id" c:identifier="oren_dcuser_get_id">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_login_code" c:identifier="oren_dcuser_get_login_code">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="oren_dcuser_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="network_type" c:identifier="oren_dcuser_network_type">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="open" c:identifier="oren_dcuser_open">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="channel" transfer-ownership="none">
            <type name="DCChannel" c:type="OrenDCChannel*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
          <parameter name="user_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="client_version" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="network_type" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_id" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="login_code" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="protocol_version" transfer-ownership="none">
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="protocol_version"
              c:identifier="oren_dcuser_protocol_version">
        <return-value transfer-ownership="none">
          <type name="guint8" c:type="guint8"/>
        </return-value>
      </method>
      <method name="recv" c:identifier="oren_dcuser_recv">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="from" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="session_id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send" c:identifier="oren_dcuser_send">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="session_id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
          <parameter name="flush" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_address" c:identifier="oren_dcuser_set_address">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="addr" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="work" c:identifier="oren_dcuser_work">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tv" transfer-ownership="none">
            <type name="gpointer" c:type="timeval*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DCUserPrivate" c:type="OrenDCUserPrivate*"/>
      </field>
      <glib:signal name="data" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="message" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="guint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="p2p" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DCUserClass"
            c:type="OrenDCUserClass"
            glib:is-gtype-struct-for="DCUser">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="message">
        <callback name="message">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCUser" c:type="OrenDCUser*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="data">
        <callback name="data">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCUser" c:type="OrenDCUser*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="p2p">
        <callback name="p2p">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DCUser" c:type="OrenDCUser*"/>
            </parameter>
            <parameter name="enable" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="DCUserPrivate" c:type="OrenDCUserPrivate" disguised="1">
    </record>
    <class name="MTBranch"
           c:symbol-prefix="mtbranch"
           c:type="OrenMTBranch"
           parent="GObject.Object"
           glib:type-name="OrenMTBranch"
           glib:get-type="oren_mtbranch_get_type"
           glib:type-struct="MTBranchClass">
      <constructor name="new" c:identifier="oren_mtbranch_new">
        <return-value transfer-ownership="full">
          <type name="MTBranch" c:type="OrenMTBranch*"/>
        </return-value>
        <parameters>
          <parameter name="peer" transfer-ownership="none">
            <type name="MTPeer" c:type="OrenMTPeer*"/>
          </parameter>
          <parameter name="branch_id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_children" c:identifier="oren_mtbranch_get_children">
        <doc xml:whitespace="preserve">Get the children mates of the specified branch.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a list of #OrenMTMate or %NULL if there's none.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="MTMate"/>
          </type>
        </return-value>
      </method>
      <method name="get_id" c:identifier="oren_mtbranch_get_id">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_parent" c:identifier="oren_mtbranch_get_parent">
        <doc xml:whitespace="preserve">Get the parent mate of the specified branch.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenMTMate or %NULL if there's none.</doc>
          <type name="MTMate" c:type="OrenMTMate*"/>
        </return-value>
      </method>
      <method name="try_child" c:identifier="oren_mtbranch_try_child">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mate_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="mate_id" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="mate_addr" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="try_parent" c:identifier="oren_mtbranch_try_parent">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mate_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="mate_id" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="mate_addr" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="MTBranchPrivate" c:type="OrenMTBranchPrivate*"/>
      </field>
    </class>
    <record name="MTBranchClass"
            c:type="OrenMTBranchClass"
            glib:is-gtype-struct-for="MTBranch">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="MTBranchPrivate" c:type="OrenMTBranchPrivate" disguised="1">
    </record>
    <class name="MTMate"
           c:symbol-prefix="mtmate"
           c:type="OrenMTMate"
           parent="GObject.Object"
           glib:type-name="OrenMTMate"
           glib:get-type="oren_mtmate_get_type"
           glib:type-struct="MTMateClass">
      <constructor name="new" c:identifier="oren_mtmate_new">
        <return-value transfer-ownership="full">
          <type name="MTMate" c:type="OrenMTMate*"/>
        </return-value>
        <parameters>
          <parameter name="branch" transfer-ownership="none">
            <type name="MTBranch" c:type="OrenMTBranch*"/>
          </parameter>
          <parameter name="mate_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="mate_id" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="mate_addr" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="is_parent" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_address" c:identifier="oren_mtmate_get_address">
        <doc xml:whitespace="preserve">Get the socket address of the P2P mate.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenNCSockaddr or %NULL on error.</doc>
          <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
        </return-value>
      </method>
      <method name="get_id" c:identifier="oren_mtmate_get_id">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="oren_mtmate_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="is_connected" c:identifier="oren_mtmate_is_connected">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="MTMatePrivate" c:type="OrenMTMatePrivate*"/>
      </field>
    </class>
    <record name="MTMateClass"
            c:type="OrenMTMateClass"
            glib:is-gtype-struct-for="MTMate">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="MTMatePrivate" c:type="OrenMTMatePrivate" disguised="1">
    </record>
    <class name="MTMember"
           c:symbol-prefix="mtmember"
           c:type="OrenMTMember"
           parent="GObject.Object"
           glib:type-name="OrenMTMember"
           glib:get-type="oren_mtmember_get_type"
           glib:type-struct="MTMemberClass">
      <constructor name="new" c:identifier="oren_mtmember_new">
        <return-value transfer-ownership="full">
          <type name="MTMember" c:type="OrenMTMember*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="MTSource" c:type="OrenMTSource*"/>
          </parameter>
          <parameter name="member_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="member_id" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="observed_addr" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="local_addr" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="network_type" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="data_seq" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_id" c:identifier="oren_mtmember_get_id">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_local_address"
              c:identifier="oren_mtmember_get_local_address">
        <doc xml:whitespace="preserve">Get the local socket address of the P2P member.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenNCSockaddr or %NULL on error.</doc>
          <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="oren_mtmember_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_network_type"
              c:identifier="oren_mtmember_get_network_type">
        <return-value transfer-ownership="none">
          <type name="guint16" c:type="guint16"/>
        </return-value>
      </method>
      <method name="get_observed_address"
              c:identifier="oren_mtmember_get_observed_address">
        <doc xml:whitespace="preserve">Get the observed socket address of the P2P member.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenNCSockaddr or %NULL on error.</doc>
          <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
        </return-value>
      </method>
      <method name="is_join" c:identifier="oren_mtmember_is_join">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_spare" c:identifier="oren_mtmember_is_spare">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="recv_from" c:identifier="oren_mtmember_recv_from">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="from" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="session_id" transfer-ownership="none">
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rtt" c:identifier="oren_mtmember_set_rtt">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="rtt" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="MTMemberPrivate" c:type="OrenMTMemberPrivate*"/>
      </field>
    </class>
    <record name="MTMemberClass"
            c:type="OrenMTMemberClass"
            glib:is-gtype-struct-for="MTMember">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="MTMemberPrivate" c:type="OrenMTMemberPrivate" disguised="1">
    </record>
    <class name="MTNode"
           c:symbol-prefix="mtnode"
           c:type="OrenMTNode"
           parent="GObject.Object"
           glib:type-name="OrenMTNode"
           glib:get-type="oren_mtnode_get_type"
           glib:type-struct="MTNodeClass">
      <constructor name="new" c:identifier="oren_mtnode_new">
        <return-value transfer-ownership="full">
          <type name="MTNode" c:type="OrenMTNode*"/>
        </return-value>
        <parameters>
          <parameter name="member" transfer-ownership="none">
            <type name="MTMember" c:type="OrenMTMember*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_children" c:identifier="oren_mtnode_get_children">
        <doc xml:whitespace="preserve">Get the children nodes of the specified node.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a list of #OrenMTNode or %NULL if there's none.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="MTNode"/>
          </type>
        </return-value>
      </method>
      <method name="get_depth" c:identifier="oren_mtnode_get_depth">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_height" c:identifier="oren_mtnode_get_height">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="max_val" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_member" c:identifier="oren_mtnode_get_member">
        <doc xml:whitespace="preserve">Get the P2P member associated with the node.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenMTNode or %NULL on error.</doc>
          <type name="MTMember" c:type="OrenMTMember*"/>
        </return-value>
      </method>
      <method name="get_parent" c:identifier="oren_mtnode_get_parent">
        <doc xml:whitespace="preserve">Get the parent node of the specified node.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenMTNode or %NULL if there's none.</doc>
          <type name="MTNode" c:type="OrenMTNode*"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="MTNodePrivate" c:type="OrenMTNodePrivate*"/>
      </field>
    </class>
    <record name="MTNodeClass"
            c:type="OrenMTNodeClass"
            glib:is-gtype-struct-for="MTNode">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="MTNodePrivate" c:type="OrenMTNodePrivate" disguised="1">
    </record>
    <class name="MTPeer"
           c:symbol-prefix="mtpeer"
           c:type="OrenMTPeer"
           parent="GObject.Object"
           glib:type-name="OrenMTPeer"
           glib:get-type="oren_mtpeer_get_type"
           glib:type-struct="MTPeerClass">
      <constructor name="new" c:identifier="oren_mtpeer_new">
        <return-value transfer-ownership="full">
          <type name="MTPeer" c:type="OrenMTPeer*"/>
        </return-value>
        <parameters>
          <parameter name="peer_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="peer_id" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="data_seq" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="source_addr" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="branch_count" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="join">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="join" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="recv">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="send_to">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="branch_count" c:identifier="oren_mtpeer_branch_count">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
      </method>
      <method name="disconnect" c:identifier="oren_mtpeer_disconnect">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="flush" c:identifier="oren_mtpeer_flush">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_branch" c:identifier="oren_mtpeer_get_branch">
        <doc xml:whitespace="preserve">Get the multicast branch with the specified branch ID.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenMTBranch or %NULL on error.</doc>
          <type name="MTBranch" c:type="OrenMTBranch*"/>
        </return-value>
        <parameters>
          <parameter name="branch_id" transfer-ownership="none">
            <doc xml:whitespace="preserve">the branch ID</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_branch_rtt" c:identifier="oren_mtpeer_get_branch_rtt">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_id" c:identifier="oren_mtpeer_get_id">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="oren_mtpeer_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="receive_from" c:identifier="oren_mtpeer_receive_from">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="from" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_buffer" c:identifier="oren_mtpeer_set_buffer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
          <parameter name="head_reserve" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_join" c:identifier="oren_mtpeer_set_join">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="join" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source_rtt" c:identifier="oren_mtpeer_set_source_rtt">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="rtt" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="work" c:identifier="oren_mtpeer_work">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="MTPeerPrivate" c:type="OrenMTPeerPrivate*"/>
      </field>
      <glib:signal name="join" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="recv" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="send-to" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCSockaddr"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="MTPeerClass"
            c:type="OrenMTPeerClass"
            glib:is-gtype-struct-for="MTPeer">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="send_to">
        <callback name="send_to">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="MTPeer" c:type="OrenMTPeer*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="recv">
        <callback name="recv">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="MTPeer" c:type="OrenMTPeer*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="join">
        <callback name="join">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="MTPeer" c:type="OrenMTPeer*"/>
            </parameter>
            <parameter name="join" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="MTPeerPrivate" c:type="OrenMTPeerPrivate" disguised="1">
    </record>
    <class name="MTSource"
           c:symbol-prefix="mtsource"
           c:type="OrenMTSource"
           parent="GObject.Object"
           glib:type-name="OrenMTSource"
           glib:get-type="oren_mtsource_get_type"
           glib:type-struct="MTSourceClass">
      <constructor name="new" c:identifier="oren_mtsource_new">
        <return-value transfer-ownership="full">
          <type name="MTSource" c:type="OrenMTSource*"/>
        </return-value>
        <parameters>
          <parameter name="source_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="tree_count" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="send_to">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_member" c:identifier="oren_mtsource_add_member">
        <doc xml:whitespace="preserve">Add a P2P member to the source.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenMTMember or %NULL on error.</doc>
          <type name="MTMember" c:type="OrenMTMember*"/>
        </return-value>
        <parameters>
          <parameter name="member_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the member name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="observed_addr" transfer-ownership="none">
            <doc xml:whitespace="preserve">observed socket address</doc>
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="local_addr" transfer-ownership="none">
            <doc xml:whitespace="preserve">local socket address</doc>
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="network_type" transfer-ownership="none">
            <doc xml:whitespace="preserve">network type</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="data_seq" c:identifier="oren_mtsource_data_seq">
        <return-value transfer-ownership="none">
          <type name="guint16" c:type="guint16"/>
        </return-value>
      </method>
      <method name="flush" c:identifier="oren_mtsource_flush">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_member" c:identifier="oren_mtsource_get_member">
        <doc xml:whitespace="preserve">Lookup a P2P member with the specified name.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenMTMember or %NULL on error.</doc>
          <type name="MTMember" c:type="OrenMTMember*"/>
        </return-value>
        <parameters>
          <parameter name="member_name" transfer-ownership="none">
            <doc xml:whitespace="preserve">the member name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="oren_mtsource_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="get_tree" c:identifier="oren_mtsource_get_tree">
        <doc xml:whitespace="preserve">Get the multicast tree with the specified tree ID.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenMTTree or %NULL on error.</doc>
          <type name="MTTree" c:type="OrenMTTree*"/>
        </return-value>
        <parameters>
          <parameter name="tree_id" transfer-ownership="none">
            <doc xml:whitespace="preserve">the tree ID</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="multicast"
              c:identifier="oren_mtsource_multicast"
              introspectable="0">
        <doc xml:whitespace="preserve">Multicast data to all P2P members.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:whitespace="preserve">the data</doc>
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:whitespace="preserve">the data length</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="multicast_packet"
              c:identifier="oren_mtsource_multicast_packet">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="receive_from" c:identifier="oren_mtsource_receive_from">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="from" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_member" c:identifier="oren_mtsource_remove_member">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="member_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_buffer" c:identifier="oren_mtsource_set_buffer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
          <parameter name="head_reserve" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="tree_count" c:identifier="oren_mtsource_tree_count">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
      </method>
      <method name="work" c:identifier="oren_mtsource_work">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="MTSourcePrivate" c:type="OrenMTSourcePrivate*"/>
      </field>
      <glib:signal name="send-to" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCSockaddr"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="MTSourceClass"
            c:type="OrenMTSourceClass"
            glib:is-gtype-struct-for="MTSource">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="send_to">
        <callback name="send_to">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="MTSource" c:type="OrenMTSource*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="MTSourcePrivate" c:type="OrenMTSourcePrivate" disguised="1">
    </record>
    <class name="MTTree"
           c:symbol-prefix="mttree"
           c:type="OrenMTTree"
           parent="GObject.Object"
           glib:type-name="OrenMTTree"
           glib:get-type="oren_mttree_get_type"
           glib:type-struct="MTTreeClass">
      <constructor name="new" c:identifier="oren_mttree_new">
        <return-value transfer-ownership="full">
          <type name="MTTree" c:type="OrenMTTree*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="MTSource" c:type="OrenMTSource*"/>
          </parameter>
          <parameter name="tree_id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_node" c:identifier="oren_mttree_add_node">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="member" transfer-ownership="none">
            <type name="MTMember" c:type="OrenMTMember*"/>
          </parameter>
        </parameters>
      </method>
      <method name="build" c:identifier="oren_mttree_build">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_id" c:identifier="oren_mttree_get_id">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_node" c:identifier="oren_mttree_get_node">
        <doc xml:whitespace="preserve">Lookup a node with the specified member ID.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenMTNode or %NULL on error.</doc>
          <type name="MTNode" c:type="OrenMTNode*"/>
        </return-value>
        <parameters>
          <parameter name="member_id" transfer-ownership="none">
            <doc xml:whitespace="preserve">the member ID</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_node" c:identifier="oren_mttree_remove_node">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="member_id" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="root" c:identifier="oren_mttree_root">
        <doc xml:whitespace="preserve">Get the tree's root node.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #OrenMTNode or %NULL on error.</doc>
          <type name="MTNode" c:type="OrenMTNode*"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="MTTreePrivate" c:type="OrenMTTreePrivate*"/>
      </field>
    </class>
    <record name="MTTreeClass"
            c:type="OrenMTTreeClass"
            glib:is-gtype-struct-for="MTTree">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="MTTreePrivate" c:type="OrenMTTreePrivate" disguised="1">
    </record>
    <class name="NCBuffer"
           c:symbol-prefix="ncbuffer"
           c:type="OrenNCBuffer"
           parent="GObject.Object"
           glib:type-name="OrenNCBuffer"
           glib:get-type="oren_ncbuffer_get_type"
           glib:type-struct="NCBufferClass">
      <constructor name="new" c:identifier="oren_ncbuffer_new">
        <return-value transfer-ownership="full">
          <type name="NCBuffer" c:type="OrenNCBuffer*"/>
        </return-value>
      </constructor>
      <method name="check_checksum"
              c:identifier="oren_ncbuffer_check_checksum">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="clone" c:identifier="oren_ncbuffer_clone">
        <doc xml:whitespace="preserve">Clone a buffer.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the cloned buffer</doc>
          <type name="NCBuffer" c:type="OrenNCBuffer*"/>
        </return-value>
      </method>
      <method name="copy_data" c:identifier="oren_ncbuffer_copy_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="from" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="data_length" c:identifier="oren_ncbuffer_data_length">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="data_ptr"
              c:identifier="oren_ncbuffer_data_ptr"
              introspectable="0">
        <doc xml:whitespace="preserve">Return the data buffer pointer</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the data buffer</doc>
          <type name="gpointer" c:type="gconstpointer"/>
        </return-value>
      </method>
      <method name="equal" c:identifier="oren_ncbuffer_equal">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="other" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="freeze" c:identifier="oren_ncbuffer_freeze">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="is_frozen" c:identifier="oren_ncbuffer_is_frozen">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="read_adv" c:identifier="oren_ncbuffer_read_adv">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="len" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_ptr"
              c:identifier="oren_ncbuffer_read_ptr"
              introspectable="0">
        <doc xml:whitespace="preserve">Return the read buffer pointer</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the read buffer</doc>
          <type name="gpointer" c:type="gconstpointer"/>
        </return-value>
      </method>
      <method name="read_sockaddr" c:identifier="oren_ncbuffer_read_sockaddr">
        <doc xml:whitespace="preserve">Read an socket address from the buffer.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #OrenNCSockaddr or %NULL on error. Free the returned object with g_object_unref().</doc>
          <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
        </return-value>
      </method>
      <method name="read_string" c:identifier="oren_ncbuffer_read_string">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="read_u16" c:identifier="oren_ncbuffer_read_u16">
        <return-value transfer-ownership="none">
          <type name="guint16" c:type="guint16"/>
        </return-value>
      </method>
      <method name="read_u32" c:identifier="oren_ncbuffer_read_u32">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="read_u64" c:identifier="oren_ncbuffer_read_u64">
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
      </method>
      <method name="read_u8" c:identifier="oren_ncbuffer_read_u8">
        <return-value transfer-ownership="none">
          <type name="guint8" c:type="guint8"/>
        </return-value>
      </method>
      <method name="reset" c:identifier="oren_ncbuffer_reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="unread_length" c:identifier="oren_ncbuffer_unread_length">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="write_adv" c:identifier="oren_ncbuffer_write_adv">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="len" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_checksum"
              c:identifier="oren_ncbuffer_write_checksum">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_data" c:identifier="oren_ncbuffer_write_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_ptr"
              c:identifier="oren_ncbuffer_write_ptr"
              introspectable="0">
        <doc xml:whitespace="preserve">Return the write buffer pointer</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the write buffer</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="require_space" transfer-ownership="none">
            <doc xml:whitespace="preserve">required space for new data</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_sockaddr"
              c:identifier="oren_ncbuffer_write_sockaddr">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_string" c:identifier="oren_ncbuffer_write_string">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_u16" c:identifier="oren_ncbuffer_write_u16">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_u32" c:identifier="oren_ncbuffer_write_u32">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_u64" c:identifier="oren_ncbuffer_write_u64">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_u8" c:identifier="oren_ncbuffer_write_u8">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="NCBufferPrivate" c:type="OrenNCBufferPrivate*"/>
      </field>
    </class>
    <record name="NCBufferClass"
            c:type="OrenNCBufferClass"
            glib:is-gtype-struct-for="NCBuffer">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="NCBufferPrivate" c:type="OrenNCBufferPrivate" disguised="1">
    </record>
    <record name="NCFlowControl" c:type="OrenNCFlowControl" disguised="1">
    </record>
    <class name="NCHandler"
           c:symbol-prefix="nchandler"
           c:type="OrenNCHandler"
           parent="GObject.Object"
           glib:type-name="OrenNCHandler"
           glib:get-type="oren_nchandler_get_type"
           glib:type-struct="NCHandlerClass">
      <constructor name="new" c:identifier="oren_nchandler_new">
        <return-value transfer-ownership="full">
          <type name="NCHandler" c:type="OrenNCHandler*"/>
        </return-value>
      </constructor>
      <virtual-method name="handle_input" invoker="handle_input">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="socket" transfer-ownership="none">
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_timer" invoker="handle_timer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="timer_id" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="handle_input" c:identifier="oren_nchandler_handle_input">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="socket" transfer-ownership="none">
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
        </parameters>
      </method>
      <method name="handle_timer" c:identifier="oren_nchandler_handle_timer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="timer_id" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="handle-input" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCSocket"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="handle-timer" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="NCHandlerClass"
            c:type="OrenNCHandlerClass"
            glib:is-gtype-struct-for="NCHandler">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="handle_input">
        <callback name="handle_input">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCHandler" c:type="OrenNCHandler*"/>
            </parameter>
            <parameter name="socket" transfer-ownership="none">
              <type name="NCSocket" c:type="OrenNCSocket*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_timer">
        <callback name="handle_timer">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCHandler" c:type="OrenNCHandler*"/>
            </parameter>
            <parameter name="timer_id" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="NCInetAddress"
           c:symbol-prefix="ncinet_address"
           c:type="OrenNCInetAddress"
           parent="GObject.Object"
           glib:type-name="OrenNCInetAddress"
           glib:get-type="oren_ncinet_address_get_type"
           glib:type-struct="NCInetAddressClass">
      <constructor name="new_any" c:identifier="oren_ncinet_address_new_any">
        <return-value transfer-ownership="full">
          <type name="NCInetAddress" c:type="OrenNCInetAddress*"/>
        </return-value>
        <parameters>
          <parameter name="family" transfer-ownership="none">
            <type name="NCSocketFamily" c:type="OrenNCSocketFamily"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_bytes"
                   c:identifier="oren_ncinet_address_new_from_bytes">
        <return-value transfer-ownership="full">
          <type name="NCInetAddress" c:type="OrenNCInetAddress*"/>
        </return-value>
        <parameters>
          <parameter name="bytes" transfer-ownership="none">
            <type name="guint8" c:type="const guint8*"/>
          </parameter>
          <parameter name="family" transfer-ownership="none">
            <type name="NCSocketFamily" c:type="OrenNCSocketFamily"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_string"
                   c:identifier="oren_ncinet_address_new_from_string">
        <return-value transfer-ownership="full">
          <type name="NCInetAddress" c:type="OrenNCInetAddress*"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_loopback"
                   c:identifier="oren_ncinet_address_new_loopback">
        <return-value transfer-ownership="full">
          <type name="NCInetAddress" c:type="OrenNCInetAddress*"/>
        </return-value>
        <parameters>
          <parameter name="family" transfer-ownership="none">
            <type name="NCSocketFamily" c:type="OrenNCSocketFamily"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="equal" c:identifier="oren_ncinet_address_equal">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="other" transfer-ownership="none">
            <type name="NCInetAddress" c:type="OrenNCInetAddress*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_family" c:identifier="oren_ncinet_address_get_family">
        <return-value transfer-ownership="none">
          <type name="NCSocketFamily" c:type="OrenNCSocketFamily"/>
        </return-value>
      </method>
      <method name="get_native_size"
              c:identifier="oren_ncinet_address_get_native_size">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="is_any" c:identifier="oren_ncinet_address_is_any">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_loopback"
              c:identifier="oren_ncinet_address_is_loopback">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="to_bytes" c:identifier="oren_ncinet_address_to_bytes">
        <return-value transfer-ownership="none">
          <type name="guint8" c:type="const guint8*"/>
        </return-value>
      </method>
      <method name="to_string" c:identifier="oren_ncinet_address_to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <property name="bytes"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer"/>
      </property>
      <property name="family"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="NCSocketFamily"/>
      </property>
      <property name="is-any" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <property name="is-loopback" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="NCInetAddressPrivate" c:type="OrenNCInetAddressPrivate*"/>
      </field>
    </class>
    <record name="NCInetAddressClass"
            c:type="OrenNCInetAddressClass"
            glib:is-gtype-struct-for="NCInetAddress">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="NCInetAddressPrivate"
            c:type="OrenNCInetAddressPrivate"
            disguised="1">
    </record>
    <class name="NCInetSockaddr"
           c:symbol-prefix="ncinet_sockaddr"
           c:type="OrenNCInetSockaddr"
           parent="NCSockaddr"
           glib:type-name="OrenNCInetSockaddr"
           glib:get-type="oren_ncinet_sockaddr_get_type"
           glib:type-struct="NCInetSockaddrClass">
      <constructor name="new" c:identifier="oren_ncinet_sockaddr_new">
        <return-value transfer-ownership="full">
          <type name="NCInetSockaddr" c:type="OrenNCInetSockaddr*"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="NCInetAddress" c:type="OrenNCInetAddress*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_string"
                   c:identifier="oren_ncinet_sockaddr_new_from_string">
        <doc xml:whitespace="preserve">Create an #OrenNCInetSockaddr object.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #OrenNCInetSockaddr or %NULL on error. Free the returned object with g_object_unref().</doc>
          <type name="NCInetSockaddr" c:type="OrenNCInetSockaddr*"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">ip:port</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_simple"
                   c:identifier="oren_ncinet_sockaddr_new_simple">
        <doc xml:whitespace="preserve">Create an #OrenNCInetSockaddr object.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #OrenNCInetSockaddr or %NULL on error. Free the returned object with g_object_unref().</doc>
          <type name="NCInetSockaddr" c:type="OrenNCInetSockaddr*"/>
        </return-value>
        <parameters>
          <parameter name="ip" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">the ip address</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <doc xml:whitespace="preserve">the port</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_address"
              c:identifier="oren_ncinet_sockaddr_get_address">
        <doc xml:whitespace="preserve">Gets @self's #OrenNCInetAddress.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the #OrenNCInetAddress for @self, which must be g_object_ref()'d if it will be stored</doc>
          <type name="NCInetAddress" c:type="OrenNCInetAddress*"/>
        </return-value>
      </method>
      <method name="get_flowinfo"
              c:identifier="oren_ncinet_sockaddr_get_flowinfo">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_port" c:identifier="oren_ncinet_sockaddr_get_port">
        <return-value transfer-ownership="none">
          <type name="guint16" c:type="guint16"/>
        </return-value>
      </method>
      <method name="get_scope_id"
              c:identifier="oren_ncinet_sockaddr_get_scope_id">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="to_string" c:identifier="oren_ncinet_sockaddr_to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <property name="address"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="NCInetAddress"/>
      </property>
      <property name="flowinfo"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="port"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="scope-id"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="guint"/>
      </property>
      <field name="parent_instance">
        <type name="NCSockaddr" c:type="OrenNCSockaddr"/>
      </field>
      <field name="address">
        <type name="NCInetAddress" c:type="OrenNCInetAddress*"/>
      </field>
      <field name="port">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="flowinfo">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="scope_id">
        <type name="guint32" c:type="guint32"/>
      </field>
    </class>
    <record name="NCInetSockaddrClass"
            c:type="OrenNCInetSockaddrClass"
            glib:is-gtype-struct-for="NCInetSockaddr">
      <field name="parent_class">
        <type name="NCSockaddrClass" c:type="OrenNCSockaddrClass"/>
      </field>
    </record>
    <record name="NCLogger" c:type="OrenNCLogger" disguised="1">
    </record>
    <record name="NCMsgQueue" c:type="OrenNCMsgQueue" disguised="1">
    </record>
    <enumeration name="NCOnlineState"
                 glib:type-name="OrenNCOnlineState"
                 glib:get-type="oren_nconline_state_get_type"
                 c:type="OrenNCOnlineState">
      <member name="unknown"
              value="0"
              c:identifier="OREN_NCONLINE_STATE_UNKNOWN"
              glib:nick="unknown"/>
      <member name="offline"
              value="1"
              c:identifier="OREN_NCONLINE_STATE_OFFLINE"
              glib:nick="offline"/>
      <member name="logining"
              value="2"
              c:identifier="OREN_NCONLINE_STATE_LOGINING"
              glib:nick="logining"/>
      <member name="online"
              value="3"
              c:identifier="OREN_NCONLINE_STATE_ONLINE"
              glib:nick="online"/>
    </enumeration>
    <class name="NCPacker"
           c:symbol-prefix="ncpacker"
           c:type="OrenNCPacker"
           parent="GObject.Object"
           glib:type-name="OrenNCPacker"
           glib:get-type="oren_ncpacker_get_type"
           glib:type-struct="NCPackerClass">
      <constructor name="new" c:identifier="oren_ncpacker_new">
        <return-value transfer-ownership="full">
          <type name="NCPacker" c:type="OrenNCPacker*"/>
        </return-value>
        <parameters>
          <parameter name="block_size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="block_count" c:identifier="oren_ncpacker_block_count">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="block_size" c:identifier="oren_ncpacker_block_size">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="extract_to" c:identifier="oren_ncpacker_extract_to">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush_buffer" c:identifier="oren_ncpacker_flush_buffer">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_block"
              c:identifier="oren_ncpacker_get_block"
              introspectable="0">
        <return-value>
          <doc xml:whitespace="preserve">The buffer containing the block data.</doc>
          <type name="gpointer" c:type="gconstpointer"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <doc xml:whitespace="preserve">the data index</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:whitespace="preserve">if non-%NULL, @size will be set to the number of bytes in the returned buffer.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_buffer_empty"
              c:identifier="oren_ncpacker_is_buffer_empty">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="pack_data"
              c:identifier="oren_ncpacker_pack_data"
              introspectable="0">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">whether some block has been ready for get.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:whitespace="preserve">the buffer containing the data to be packed.</doc>
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:whitespace="preserve">the number of bytes to pack.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_from" c:identifier="oren_ncpacker_pack_from">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pop_block" c:identifier="oren_ncpacker_pop_block">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="reset" c:identifier="oren_ncpacker_reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <property name="block-size"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="NCPackerPrivate" c:type="OrenNCPackerPrivate*"/>
      </field>
    </class>
    <record name="NCPackerClass"
            c:type="OrenNCPackerClass"
            glib:is-gtype-struct-for="NCPacker">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="NCPackerPrivate" c:type="OrenNCPackerPrivate" disguised="1">
    </record>
    <class name="NCPacketHandler"
           c:symbol-prefix="ncpacket_handler"
           c:type="OrenNCPacketHandler"
           parent="NCHandler"
           glib:type-name="OrenNCPacketHandler"
           glib:get-type="oren_ncpacket_handler_get_type"
           glib:type-struct="NCPacketHandlerClass">
      <constructor name="new" c:identifier="oren_ncpacket_handler_new">
        <return-value transfer-ownership="full">
          <type name="NCPacketHandler" c:type="OrenNCPacketHandler*"/>
        </return-value>
      </constructor>
      <virtual-method name="handle_packet">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="socket" transfer-ownership="none">
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
          <parameter name="from" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <field name="parent_instance">
        <type name="NCHandler" c:type="OrenNCHandler"/>
      </field>
      <field name="priv">
        <type name="NCPacketHandlerPrivate"
              c:type="OrenNCPacketHandlerPrivate*"/>
      </field>
      <glib:signal name="handle-packet" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCSocket"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="NCSockaddr"/>
          </parameter>
          <parameter name="p1" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="NCPacketHandlerClass"
            c:type="OrenNCPacketHandlerClass"
            glib:is-gtype-struct-for="NCPacketHandler">
      <field name="parent_class">
        <type name="NCHandlerClass" c:type="OrenNCHandlerClass"/>
      </field>
      <field name="handle_packet">
        <callback name="handle_packet">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCPacketHandler" c:type="OrenNCPacketHandler*"/>
            </parameter>
            <parameter name="socket" transfer-ownership="none">
              <type name="NCSocket" c:type="OrenNCSocket*"/>
            </parameter>
            <parameter name="from" transfer-ownership="none">
              <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="NCPacketHandlerPrivate"
            c:type="OrenNCPacketHandlerPrivate"
            disguised="1">
    </record>
    <record name="NCPingMgr" c:type="OrenNCPingMgr" disguised="1">
    </record>
    <record name="NCPingResult" c:type="OrenNCPingResult" disguised="1">
    </record>
    <class name="NCReactor"
           c:symbol-prefix="ncreactor"
           c:type="OrenNCReactor"
           parent="GObject.Object"
           glib:type-name="OrenNCReactor"
           glib:get-type="oren_ncreactor_get_type"
           glib:type-struct="NCReactorClass">
      <constructor name="new" c:identifier="oren_ncreactor_new">
        <return-value transfer-ownership="full">
          <type name="NCReactor" c:type="OrenNCReactor*"/>
        </return-value>
      </constructor>
      <method name="cancel_timer" c:identifier="oren_ncreactor_cancel_timer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="timer_id" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="end_loop" c:identifier="oren_ncreactor_end_loop">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="once" c:identifier="oren_ncreactor_once">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="callback" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer*"/>
          </parameter>
          <parameter name="arg" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="register_handler"
              c:identifier="oren_ncreactor_register_handler">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">boolean</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="socket" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCSocket</doc>
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
          <parameter name="handler" transfer-ownership="none">
            <doc xml:whitespace="preserve">a handler to be registered</doc>
            <type name="NCHandler" c:type="OrenNCHandler*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_handler"
              c:identifier="oren_ncreactor_remove_handler">
        <doc xml:whitespace="preserve">Remove event handler from the reactor.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handler" transfer-ownership="none">
            <doc xml:whitespace="preserve">the handler to be removed</doc>
            <type name="NCHandler" c:type="OrenNCHandler*"/>
          </parameter>
          <parameter name="socket" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">the socket</doc>
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
        </parameters>
      </method>
      <method name="run_loop" c:identifier="oren_ncreactor_run_loop">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="threaded" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="schedule_timer"
              c:identifier="oren_ncreactor_schedule_timer">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the timer id or -1 on fail</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="microseconds" transfer-ownership="none">
            <doc xml:whitespace="preserve">the interval time</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="handler" transfer-ownership="none">
            <doc xml:whitespace="preserve">the handler to be registered</doc>
            <type name="NCHandler" c:type="OrenNCHandler*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="NCReactorPrivate" c:type="OrenNCReactorPrivate*"/>
      </field>
    </class>
    <record name="NCReactorClass"
            c:type="OrenNCReactorClass"
            glib:is-gtype-struct-for="NCReactor">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="NCReactorPrivate"
            c:type="OrenNCReactorPrivate"
            disguised="1">
    </record>
    <constant name="NCSESSION_HEAD_SIZE"
              value="3"
              c:type="OREN_NCSESSION_HEAD_SIZE">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="NCSESSION_PING_TIMEOUT"
              value="-1"
              c:type="OREN_NCSESSION_PING_TIMEOUT">
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="NCSession"
           c:symbol-prefix="ncsession"
           c:type="OrenNCSession"
           parent="GObject.Object"
           glib:type-name="OrenNCSession"
           glib:get-type="oren_ncsession_get_type"
           glib:type-struct="NCSessionClass">
      <constructor name="new" c:identifier="oren_ncsession_new">
        <return-value transfer-ownership="full">
          <type name="NCSession" c:type="OrenNCSession*"/>
        </return-value>
        <parameters>
          <parameter name="init_seq" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="full_fail" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="fifo" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="duplicate">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="ping">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="rtt" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="recv">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="recv_ack">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="recv_lost">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="recv_retry">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="send">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="send_lost">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="send_retry">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="enqueue" c:identifier="oren_ncsession_enqueue">
        <return-value transfer-ownership="none">
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush_recv" c:identifier="oren_ncsession_flush_recv">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="flush_send" c:identifier="oren_ncsession_flush_send">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_max_resend"
              c:identifier="oren_ncsession_get_max_resend">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_pps" c:identifier="oren_ncsession_get_pps">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_rtt" c:identifier="oren_ncsession_get_rtt">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
      </method>
      <method name="recv" c:identifier="oren_ncsession_recv">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="oren_ncsession_reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="init_seq" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="reset_pps" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="send" c:identifier="oren_ncsession_send">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_buffer" c:identifier="oren_ncsession_set_buffer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
          <parameter name="head_reserve" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_resend"
              c:identifier="oren_ncsession_set_max_resend">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="resend" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="oren_ncsession_set_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pps" c:identifier="oren_ncsession_set_pps">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pps" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rtt" c:identifier="oren_ncsession_set_rtt">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="rtt" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="work" c:identifier="oren_ncsession_work">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="ping" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="NCSessionPrivate" c:type="OrenNCSessionPrivate*"/>
      </field>
      <glib:signal name="duplicate" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="ping" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="recv" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="recv-ack" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="recv-lost" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="recv-retry" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="send" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="send-lost" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="send-retry" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="NCSessionClass"
            c:type="OrenNCSessionClass"
            glib:is-gtype-struct-for="NCSession">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="send">
        <callback name="send">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCSession" c:type="OrenNCSession*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="recv">
        <callback name="recv">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCSession" c:type="OrenNCSession*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="send_retry">
        <callback name="send_retry">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCSession" c:type="OrenNCSession*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="recv_retry">
        <callback name="recv_retry">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCSession" c:type="OrenNCSession*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="duplicate">
        <callback name="duplicate">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCSession" c:type="OrenNCSession*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="ping">
        <callback name="ping">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCSession" c:type="OrenNCSession*"/>
            </parameter>
            <parameter name="rtt" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="send_lost">
        <callback name="send_lost">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCSession" c:type="OrenNCSession*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="recv_lost">
        <callback name="recv_lost">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCSession" c:type="OrenNCSession*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="recv_ack">
        <callback name="recv_ack">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCSession" c:type="OrenNCSession*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="NCSessionPrivate"
            c:type="OrenNCSessionPrivate"
            disguised="1">
    </record>
    <class name="NCSockaddr"
           c:symbol-prefix="ncsockaddr"
           c:type="OrenNCSockaddr"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="OrenNCSockaddr"
           glib:get-type="oren_ncsockaddr_get_type"
           glib:type-struct="NCSockaddrClass">
      <constructor name="new_from_native"
                   c:identifier="oren_ncsockaddr_new_from_native">
        <return-value transfer-ownership="full">
          <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
        </return-value>
        <parameters>
          <parameter name="native" transfer-ownership="none">
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="equal" invoker="equal">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="other" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_family" invoker="get_family">
        <return-value transfer-ownership="none">
          <type name="NCSocketFamily" c:type="OrenNCSocketFamily"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_native_size" invoker="get_native_size">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </virtual-method>
      <virtual-method name="to_native" invoker="to_native">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="dest" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destlen" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="equal" c:identifier="oren_ncsockaddr_equal">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="other" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_family" c:identifier="oren_ncsockaddr_get_family">
        <return-value transfer-ownership="none">
          <type name="NCSocketFamily" c:type="OrenNCSocketFamily"/>
        </return-value>
      </method>
      <method name="get_native_size"
              c:identifier="oren_ncsockaddr_get_native_size">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="to_native" c:identifier="oren_ncsockaddr_to_native">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="dest" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destlen" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <property name="family" transfer-ownership="none">
        <type name="NCSocketFamily"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="NCSockaddrClass"
            c:type="OrenNCSockaddrClass"
            glib:is-gtype-struct-for="NCSockaddr">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_family">
        <callback name="get_family">
          <return-value transfer-ownership="none">
            <type name="NCSocketFamily" c:type="OrenNCSocketFamily"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="to_native">
        <callback name="to_native">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
            </parameter>
            <parameter name="dest" transfer-ownership="none">
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
            <parameter name="destlen" transfer-ownership="none">
              <type name="gsize" c:type="gsize"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_native_size">
        <callback name="get_native_size">
          <return-value transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="equal">
        <callback name="equal">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
            </parameter>
            <parameter name="other" transfer-ownership="none">
              <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="NCSocket"
           c:symbol-prefix="ncsocket"
           c:type="OrenNCSocket"
           parent="GObject.Object"
           glib:type-name="OrenNCSocket"
           glib:get-type="oren_ncsocket_get_type"
           glib:type-struct="NCSocketClass">
      <constructor name="new" c:identifier="oren_ncsocket_new">
        <return-value transfer-ownership="full">
          <type name="NCSocket" c:type="OrenNCSocket*"/>
        </return-value>
        <parameters>
          <parameter name="family" transfer-ownership="none">
            <type name="NCSocketFamily" c:type="OrenNCSocketFamily"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="NCSocketType" c:type="OrenNCSocketType"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_datagram"
                   c:identifier="oren_ncsocket_new_datagram">
        <doc xml:whitespace="preserve">Create an #OrenNCSocket object.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #OrenNCSocket or %NULL on error. Free the returned object with g_object_unref().</doc>
          <type name="NCSocket" c:type="OrenNCSocket*"/>
        </return-value>
        <parameters>
          <parameter name="ip" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">the ip address</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <doc xml:whitespace="preserve">the port</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_fd" c:identifier="oren_ncsocket_new_from_fd">
        <return-value transfer-ownership="full">
          <type name="NCSocket" c:type="OrenNCSocket*"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="bind" c:identifier="oren_ncsocket_bind">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="allow_reuse" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_family" c:identifier="oren_ncsocket_get_family">
        <return-value transfer-ownership="none">
          <type name="NCSocketFamily" c:type="OrenNCSocketFamily"/>
        </return-value>
      </method>
      <method name="get_fd" c:identifier="oren_ncsocket_get_fd">
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_local_address"
              c:identifier="oren_ncsocket_get_local_address">
        <doc xml:whitespace="preserve">Try to get the local address of a bound socket. This is only
useful if the socket has been bound to a local address,
either explicitly or implicitly when connecting.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #OrenNCSockaddr or %NULL on error. Free the returned object with g_object_unref().</doc>
          <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
        </return-value>
      </method>
      <method name="get_socket_type"
              c:identifier="oren_ncsocket_get_socket_type">
        <return-value transfer-ownership="none">
          <type name="NCSocketType" c:type="OrenNCSocketType"/>
        </return-value>
      </method>
      <method name="receive_from"
              c:identifier="oren_ncsocket_receive_from"
              introspectable="0">
        <doc xml:whitespace="preserve">Receive data (up to @size bytes) from a socket.

If @address is non-%NULL then @address will be set equal to the
source address of the received packet.
@address is owned by the caller.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">Number of bytes read, or 0 if the connection was closed by the peer, or -1 on error</doc>
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="address"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">a pointer to a #OrenNCSockaddr pointer, or %NULL</doc>
            <type name="NCSockaddr" c:type="OrenNCSockaddr**"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:whitespace="preserve">a buffer to read data into (which should be at least @size bytes long).</doc>
            <array length="2" zero-terminated="0" c:type="gpointer">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:whitespace="preserve">the number of bytes you want to read from the socket</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="receive_packet_from"
              c:identifier="oren_ncsocket_receive_packet_from">
        <doc xml:whitespace="preserve">Receive data (up to @size bytes) from a socket.

If @address is non-%NULL then @address will be set equal to the
source address of the received packet.
@address is owned by the caller.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">Number of bytes read, or 0 if the connection was closed by the peer, or -1 on error</doc>
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="address"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">a pointer to a #OrenNCSockaddr pointer, or %NULL</doc>
            <type name="NCSockaddr" c:type="OrenNCSockaddr**"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:whitespace="preserve">an #OrenNCBuffer to receive the data</doc>
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:whitespace="preserve">the number of bytes you want to read from the socket</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_packet_to"
              c:identifier="oren_ncsocket_send_packet_to">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_to"
              c:identifier="oren_ncsocket_send_to"
              introspectable="0">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">Number of bytes sent, or 0 if the connection was closed by the peer, or -1 on error</doc>
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #OrenNCSockaddr</doc>
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:whitespace="preserve">the buffer containing the data to send.</doc>
            <array length="2" zero-terminated="0" c:type="gconstpointer">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:whitespace="preserve">the number of bytes to send.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <property name="family"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="NCSocketFamily"/>
      </property>
      <property name="fd"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint"/>
      </property>
      <property name="type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="NCSocketType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="NCSocketPrivate" c:type="OrenNCSocketPrivate*"/>
      </field>
    </class>
    <record name="NCSocketClass"
            c:type="OrenNCSocketClass"
            glib:is-gtype-struct-for="NCSocket">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="NCSocketFamily"
                 glib:type-name="OrenNCSocketFamily"
                 glib:get-type="oren_ncsocket_family_get_type"
                 c:type="OrenNCSocketFamily">
      <member name="invalid"
              value="0"
              c:identifier="OREN_NCSOCKET_FAMILY_INVALID"
              glib:nick="invalid"/>
      <member name="ipv4"
              value="2"
              c:identifier="OREN_NCSOCKET_FAMILY_IPV4"
              glib:nick="ipv4"/>
      <member name="ipv6"
              value="23"
              c:identifier="OREN_NCSOCKET_FAMILY_IPV6"
              glib:nick="ipv6"/>
    </enumeration>
    <record name="NCSocketPrivate" c:type="OrenNCSocketPrivate" disguised="1">
    </record>
    <enumeration name="NCSocketType"
                 glib:type-name="OrenNCSocketType"
                 glib:get-type="oren_ncsocket_type_get_type"
                 c:type="OrenNCSocketType">
      <member name="invalid"
              value="0"
              c:identifier="OREN_NCSOCKET_TYPE_INVALID"
              glib:nick="invalid"/>
      <member name="datagram"
              value="1"
              c:identifier="OREN_NCSOCKET_TYPE_DATAGRAM"
              glib:nick="datagram"/>
    </enumeration>
    <record name="NCStatistics" c:type="OrenNCStatistics" disguised="1">
    </record>
    <record name="NCUdproxy" c:type="OrenNCUdproxy" disguised="1">
    </record>
    <class name="NCUnpacker"
           c:symbol-prefix="ncunpacker"
           c:type="OrenNCUnpacker"
           parent="GObject.Object"
           glib:type-name="OrenNCUnpacker"
           glib:get-type="oren_ncunpacker_get_type"
           glib:type-struct="NCUnpackerClass">
      <constructor name="new" c:identifier="oren_ncunpacker_new">
        <return-value transfer-ownership="full">
          <type name="NCUnpacker" c:type="OrenNCUnpacker*"/>
        </return-value>
      </constructor>
      <method name="data_count" c:identifier="oren_ncunpacker_data_count">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="extract_to" c:identifier="oren_ncunpacker_extract_to">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_data"
              c:identifier="oren_ncunpacker_get_data"
              introspectable="0">
        <return-value>
          <doc xml:whitespace="preserve">The buffer containing the data.</doc>
          <type name="gpointer" c:type="gconstpointer"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <doc xml:whitespace="preserve">the data index</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:whitespace="preserve">if non-%NULL, @size will be set to the number of bytes in the returned buffer.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pop_data" c:identifier="oren_ncunpacker_pop_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="reset" c:identifier="oren_ncunpacker_reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="unpack_block" c:identifier="oren_ncunpacker_unpack_block">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="unpack_from" c:identifier="oren_ncunpacker_unpack_from">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="NCUnpackerPrivate" c:type="OrenNCUnpackerPrivate*"/>
      </field>
    </class>
    <record name="NCUnpackerClass"
            c:type="OrenNCUnpackerClass"
            glib:is-gtype-struct-for="NCUnpacker">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="NCUnpackerPrivate"
            c:type="OrenNCUnpackerPrivate"
            disguised="1">
    </record>
    <class name="SMChannel"
           c:symbol-prefix="smchannel"
           c:type="OrenSMChannel"
           parent="DCChannel"
           glib:type-name="OrenSMChannel"
           glib:get-type="oren_smchannel_get_type"
           glib:type-struct="SMChannelClass">
      <constructor name="new" c:identifier="oren_smchannel_new">
        <return-value transfer-ownership="full">
          <type name="SMChannel" c:type="OrenSMChannel*"/>
        </return-value>
      </constructor>
      <method name="get_source_code"
              c:identifier="oren_smchannel_get_source_code">
        <return-value transfer-ownership="none">
          <type name="guint8" c:type="guint8"/>
        </return-value>
      </method>
      <method name="get_source_id" c:identifier="oren_smchannel_get_source_id">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_source_name"
              c:identifier="oren_smchannel_get_source_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="open" c:identifier="oren_smchannel_open">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="server" transfer-ownership="none">
            <type name="DCServer" c:type="OrenDCServer*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="NCInetAddress" c:type="OrenNCInetAddress*"/>
          </parameter>
          <parameter name="parent_addr" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="channel_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="enable_p2p" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="DCChannel" c:type="OrenDCChannel"/>
      </field>
      <field name="priv">
        <type name="SMChannelPrivate" c:type="OrenSMChannelPrivate*"/>
      </field>
    </class>
    <record name="SMChannelClass"
            c:type="OrenSMChannelClass"
            glib:is-gtype-struct-for="SMChannel">
      <field name="parent_class">
        <type name="DCChannelClass" c:type="OrenDCChannelClass"/>
      </field>
    </record>
    <record name="SMChannelPrivate"
            c:type="OrenSMChannelPrivate"
            disguised="1">
    </record>
    <class name="SMClient"
           c:symbol-prefix="smclient"
           c:type="OrenSMClient"
           parent="DCClient"
           glib:type-name="OrenSMClient"
           glib:get-type="oren_smclient_get_type"
           glib:type-struct="SMClientClass">
      <constructor name="new" c:identifier="oren_smclient_new">
        <return-value transfer-ownership="full">
          <type name="SMClient" c:type="OrenSMClient*"/>
        </return-value>
      </constructor>
      <virtual-method name="accept">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="accept" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="media_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="media_format">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="source">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="param" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="accept_data" c:identifier="oren_smclient_accept_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="accept" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_source_id" c:identifier="oren_smclient_get_source_id">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_source_name"
              c:identifier="oren_smclient_get_source_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </method>
      <method name="is_source" c:identifier="oren_smclient_is_source">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="open" c:identifier="oren_smclient_open">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="reactor" transfer-ownership="none">
            <type name="NCReactor" c:type="OrenNCReactor*"/>
          </parameter>
          <parameter name="socket" transfer-ownership="none">
            <type name="NCSocket" c:type="OrenNCSocket*"/>
          </parameter>
          <parameter name="signature" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="statistics" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="pack_data" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_data" c:identifier="oren_smclient_send_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_format" c:identifier="oren_smclient_send_format">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source" c:identifier="oren_smclient_set_source">
        <doc xml:whitespace="preserve">Request data source.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="param" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">the source parameter data</doc>
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:whitespace="preserve">the parameter data length</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="DCClient" c:type="OrenDCClient"/>
      </field>
      <field name="priv">
        <type name="SMClientPrivate" c:type="OrenSMClientPrivate*"/>
      </field>
      <glib:signal name="accept" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="media-data" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="media-format" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="source" when="first">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="NCBuffer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SMClientClass"
            c:type="OrenSMClientClass"
            glib:is-gtype-struct-for="SMClient">
      <field name="parent_class">
        <type name="DCClientClass" c:type="OrenDCClientClass"/>
      </field>
      <field name="source">
        <callback name="source">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="SMClient" c:type="OrenSMClient*"/>
            </parameter>
            <parameter name="param" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="accept">
        <callback name="accept">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="SMClient" c:type="OrenSMClient*"/>
            </parameter>
            <parameter name="accept" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="media_format">
        <callback name="media_format">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="SMClient" c:type="OrenSMClient*"/>
            </parameter>
            <parameter name="format" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="media_data">
        <callback name="media_data">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="SMClient" c:type="OrenSMClient*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="NCBuffer" c:type="OrenNCBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="SMClientPrivate" c:type="OrenSMClientPrivate" disguised="1">
    </record>
    <class name="SMFactory"
           c:symbol-prefix="smfactory"
           c:type="OrenSMFactory"
           parent="DCFactory"
           glib:type-name="OrenSMFactory"
           glib:get-type="oren_smfactory_get_type"
           glib:type-struct="SMFactoryClass">
      <constructor name="new" c:identifier="oren_smfactory_new">
        <return-value transfer-ownership="full">
          <type name="SMFactory" c:type="OrenSMFactory*"/>
        </return-value>
        <parameters>
          <parameter name="pack_data" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="DCFactory" c:type="OrenDCFactory"/>
      </field>
      <field name="pack_data">
        <type name="gboolean" c:type="gboolean"/>
      </field>
    </class>
    <record name="SMFactoryClass"
            c:type="OrenSMFactoryClass"
            glib:is-gtype-struct-for="SMFactory">
      <field name="parent_class">
        <type name="DCFactoryClass" c:type="OrenDCFactoryClass"/>
      </field>
    </record>
    <record name="SMFactoryPrivate"
            c:type="OrenSMFactoryPrivate"
            disguised="1">
    </record>
    <class name="SMUser"
           c:symbol-prefix="smuser"
           c:type="OrenSMUser"
           parent="DCUser"
           glib:type-name="OrenSMUser"
           glib:get-type="oren_smuser_get_type"
           glib:type-struct="SMUserClass">
      <constructor name="new" c:identifier="oren_smuser_new">
        <return-value transfer-ownership="full">
          <type name="SMUser" c:type="OrenSMUser*"/>
        </return-value>
      </constructor>
      <method name="accept_data" c:identifier="oren_smuser_accept_data">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_source" c:identifier="oren_smuser_is_source">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="open" c:identifier="oren_smuser_open">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="channel" transfer-ownership="none">
            <type name="DCChannel" c:type="OrenDCChannel*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="NCSockaddr" c:type="OrenNCSockaddr*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="NCBuffer" c:type="OrenNCBuffer*"/>
          </parameter>
          <parameter name="user_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="client_version" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="network_type" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_id" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="login_code" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="protocol_version" transfer-ownership="none">
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="DCUser" c:type="OrenDCUser"/>
      </field>
      <field name="priv">
        <type name="SMUserPrivate" c:type="OrenSMUserPrivate*"/>
      </field>
    </class>
    <record name="SMUserClass"
            c:type="OrenSMUserClass"
            glib:is-gtype-struct-for="SMUser">
      <field name="parent_class">
        <type name="DCUserClass" c:type="OrenDCUserClass"/>
      </field>
    </record>
    <record name="SMUserPrivate" c:type="OrenSMUserPrivate" disguised="1">
    </record>
    <record name="Timeval"
            c:type="OrenTimeval"
            glib:type-name="OrenTimeval"
            glib:get-type="oren_timeval_get_type"
            c:symbol-prefix="timeval">
      <method name="sec" c:identifier="oren_timeval_sec">
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
      </method>
      <method name="usec" c:identifier="oren_timeval_usec">
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
      </method>
    </record>
    <function name="create_dcfactory"
              c:identifier="oren_create_dcfactory"
              introspectable="0">
      <doc xml:whitespace="preserve">Create a DCFactory, this function is used for dynamic load.</doc>
      <return-value>
        <type name="DCFactory" c:type="OrenDCFactory*"/>
      </return-value>
      <parameters>
        <parameter name="arg" transfer-ownership="none">
          <doc xml:whitespace="preserve">the argument</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dclogin_result_to_string"
              c:identifier="oren_dclogin_result_to_string"
              moved-to="DCLoginResult.to_string">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="DCLoginResult" c:type="OrenDCLoginResult"/>
        </parameter>
      </parameters>
    </function>
    <function name="dclogout_reason_to_string"
              c:identifier="oren_dclogout_reason_to_string"
              moved-to="DCLogoutReason.to_string">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="reason" transfer-ownership="none">
          <type name="DCLogoutReason" c:type="OrenDCLogoutReason"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
